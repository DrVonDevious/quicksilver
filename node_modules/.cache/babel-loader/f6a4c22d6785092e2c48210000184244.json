{"ast":null,"code":"var _jsxFileName = \"/Users/william/Dev/quicksilver/src/client/src/containers/ComponentListContainer.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\nimport { Rnd } from 'react-rnd';\nimport { setMode, setComponents, resetComponents } from '../reducers/loadReducer';\nimport ComponentItem from '../components/ComponentItem';\nimport SearchBar from '../components/SearchBar';\nimport '../css/ComponentListContainer.css';\n\nconst ComponentListContainer = () => {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const fetchComponents = isLibrary => {\n    const token = localStorage.getItem(\"token\");\n    var url = \"\";\n    isLibrary ? url = \"library_components\" : url = \"user_components\";\n    fetch(\"http://localhost:8080/\" + url, {\n      headers: {\n        \"Authorization\": `Bearer: ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      var components = data;\n      dispatch(resetComponents());\n\n      if (!isLibrary) {\n        components = data.filter(c => c.user_id === state.user.currentUser.id);\n      }\n\n      ;\n      dispatch(setComponents(components));\n    });\n  };\n\n  useEffect(() => {\n    if (state.user.currentUser) {\n      fetchComponents(false);\n    } else {\n      fetchComponents(true);\n    }\n\n    ;\n  }, []);\n\n  const handleSwitchList = type => {\n    switch (type) {\n      case \"lib\":\n        fetchComponents(true);\n        break;\n\n      case \"user\":\n        fetchComponents(false);\n        break;\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(Rnd, {\n    className: \"component-container\",\n    bounds: \".main-container\",\n    default: {\n      x: window.innerWidth / 1.02 - 320,\n      y: window.innerHeight / 2.88 - 250,\n      width: 320,\n      height: 500\n    },\n    enableResizing: {\n      bottom: true,\n      bottomLeft: false,\n      bottomRight: false,\n      left: false,\n      right: false,\n      top: false,\n      topLeft: false,\n      topRight: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"component-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Components\"), state.user.currentUser ? [/*#__PURE__*/React.createElement(\"button\", {\n    id: \"userTab\",\n    className: \"component-tab\",\n    onClick: () => handleSwitchList(\"user\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"My Components\")] : null, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"libTab\",\n    className: \"component-tab\",\n    onClick: () => handleSwitchList(\"lib\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Library\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"component-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), state.load.components.filter(c => c.name.includes(state.load.query)).map(c => /*#__PURE__*/React.createElement(ComponentItem, {\n    component: c,\n    key: uuid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 24\n    }\n  }))));\n};\n\nexport default ComponentListContainer;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/containers/ComponentListContainer.js"],"names":["React","useEffect","useSelector","useDispatch","v4","uuid","Rnd","setMode","setComponents","resetComponents","ComponentItem","SearchBar","ComponentListContainer","state","dispatch","fetchComponents","isLibrary","token","localStorage","getItem","url","fetch","headers","then","res","json","data","components","filter","c","user_id","user","currentUser","id","handleSwitchList","type","x","window","innerWidth","y","innerHeight","width","height","bottom","bottomLeft","bottomRight","left","right","top","topLeft","topRight","load","name","includes","query","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,SAASC,OAAT,EAAkBC,aAAlB,EAAiCC,eAAjC,QAAwD,yBAAxD;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,mCAAP;;AAEA,MAAMC,sBAAsB,GAAG,MAAM;AAEnC,QAAMC,KAAK,GAAGX,WAAW,CAACW,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,eAAe,GAAIC,SAAD,IAAe;AACrC,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAIC,GAAG,GAAG,EAAV;AACAJ,IAAAA,SAAS,GAAII,GAAG,GAAG,oBAAV,GAAmCA,GAAG,GAAG,iBAAlD;AACAC,IAAAA,KAAK,CAAC,2BAA2BD,GAA5B,EAAiC;AACpCE,MAAAA,OAAO,EAAE;AACP,yBAAkB,WAAUL,KAAM;AAD3B;AAD2B,KAAjC,CAAL,CAKGM,IALH,CAKQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALf,EAMGF,IANH,CAMQG,IAAI,IAAI;AACZ,UAAIC,UAAU,GAAGD,IAAjB;AACAZ,MAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR;;AACA,UAAI,CAACO,SAAL,EAAgB;AACdW,QAAAA,UAAU,GAAGD,IAAI,CAACE,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcjB,KAAK,CAACkB,IAAN,CAAWC,WAAX,CAAuBC,EAAtD,CAAb;AACD;;AAAA;AACDnB,MAAAA,QAAQ,CAACN,aAAa,CAACmB,UAAD,CAAd,CAAR;AACD,KAbH;AAcD,GAlBD;;AAoBA1B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,KAAK,CAACkB,IAAN,CAAWC,WAAf,EAA4B;AAC1BjB,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KAFD,MAEO;AACLA,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;;AAAA;AACF,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMmB,gBAAgB,GAAIC,IAAD,IAAU;AACjC,YAAOA,IAAP;AACE,WAAK,KAAL;AACEpB,QAAAA,eAAe,CAAC,IAAD,CAAf;AACA;;AACF,WAAK,MAAL;AACEA,QAAAA,eAAe,CAAC,KAAD,CAAf;AACA;AANJ;;AAOC;AACF,GATD;;AAWA,sBACE,oBAAC,GAAD;AACE,IAAA,SAAS,EAAC,qBADZ;AAEE,IAAA,MAAM,EAAC,iBAFT;AAGE,IAAA,OAAO,EAAE;AACPqB,MAAAA,CAAC,EAAEC,MAAM,CAACC,UAAP,GAAoB,IAApB,GAA0B,GADtB;AAEPC,MAAAA,CAAC,EAAEF,MAAM,CAACG,WAAP,GAAqB,IAArB,GAA2B,GAFvB;AAGPC,MAAAA,KAAK,EAAE,GAHA;AAIPC,MAAAA,MAAM,EAAE;AAJD,KAHX;AASE,IAAA,cAAc,EAAE;AACdC,MAAAA,MAAM,EAAE,IADM;AAEdC,MAAAA,UAAU,EAAE,KAFE;AAGdC,MAAAA,WAAW,EAAE,KAHC;AAIdC,MAAAA,IAAI,EAAE,KAJQ;AAKdC,MAAAA,KAAK,EAAE,KALO;AAMdC,MAAAA,GAAG,EAAE,KANS;AAOdC,MAAAA,OAAO,EAAE,KAPK;AAQdC,MAAAA,QAAQ,EAAE;AARI,KATlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAoBE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBF,EAqBIrC,KAAK,CAACkB,IAAN,CAAWC,WAAX,GAAyB,cACzB;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAA+C,IAAA,OAAO,EAAE,MAAME,gBAAgB,CAAC,MAAD,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADyB,CAAzB,GAEE,IAvBN,eAwBE;AAAQ,IAAA,EAAE,EAAC,QAAX;AAAoB,IAAA,SAAS,EAAC,eAA9B;AAA8C,IAAA,OAAO,EAAE,MAAMA,gBAAgB,CAAC,KAAD,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAxBF,eAyBE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGIrB,KAAK,CAACsC,IAAN,CAAWxB,UAAX,CACGC,MADH,CACUC,CAAC,IAAIA,CAAC,CAACuB,IAAF,CAAOC,QAAP,CAAgBxC,KAAK,CAACsC,IAAN,CAAWG,KAA3B,CADf,EAEGC,GAFH,CAEO1B,CAAC,iBAAK,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEA,CAA1B;AAA6B,IAAA,GAAG,EAAExB,IAAI,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFb,CAHJ,CAzBF,CADF;AAoCD,CAhFD;;AAkFA,eAAeO,sBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\nimport { Rnd } from 'react-rnd';\n\nimport { setMode, setComponents, resetComponents } from '../reducers/loadReducer';\nimport ComponentItem from '../components/ComponentItem';\nimport SearchBar from '../components/SearchBar';\nimport '../css/ComponentListContainer.css';\n\nconst ComponentListContainer = () => {\n\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const fetchComponents = (isLibrary) => {\n    const token = localStorage.getItem(\"token\");\n    var url = \"\"\n    isLibrary ? (url = \"library_components\") : (url = \"user_components\");\n    fetch(\"http://localhost:8080/\" + url, {\n      headers: {\n        \"Authorization\": `Bearer: ${token}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        var components = data;\n        dispatch(resetComponents())\n        if (!isLibrary) {\n          components = data.filter(c => c.user_id === state.user.currentUser.id)\n        };\n        dispatch(setComponents(components))\n      })\n  };\n\n  useEffect(() => {\n    if (state.user.currentUser) {\n      fetchComponents(false);\n    } else {\n      fetchComponents(true);\n    };\n  }, []);\n\n  const handleSwitchList = (type) => {\n    switch(type) {\n      case \"lib\":\n        fetchComponents(true);\n        break;\n      case \"user\":\n        fetchComponents(false);\n        break;\n    };\n  };\n\n  return (\n    <Rnd\n      className=\"component-container\"\n      bounds=\".main-container\"\n      default={{\n        x: window.innerWidth / 1.02 -320,\n        y: window.innerHeight / 2.88 -250,\n        width: 320,\n        height: 500,\n      }}\n      enableResizing={{\n        bottom: true,\n        bottomLeft: false,\n        bottomRight: false,\n        left: false,\n        right: false,\n        top: false,\n        topLeft: false,\n        topRight: false,\n      }}\n    >\n      <p className=\"component-label\">Components</p>\n      { state.user.currentUser ? [\n        <button id=\"userTab\" className=\"component-tab\" onClick={() => handleSwitchList(\"user\")}>My Components</button>,\n      ] : null }\n      <button id=\"libTab\" className=\"component-tab\" onClick={() => handleSwitchList(\"lib\")}>Library</button>\n      <div className=\"component-list\">\n      <SearchBar />\n        {\n          state.load.components\n            .filter(c => c.name.includes(state.load.query))\n            .map(c => (<ComponentItem component={c} key={uuid()} />))\n        }\n      </div>\n    </Rnd>\n  );\n};\n\nexport default ComponentListContainer;\n"]},"metadata":{},"sourceType":"module"}