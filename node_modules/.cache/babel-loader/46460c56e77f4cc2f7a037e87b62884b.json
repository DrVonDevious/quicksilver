{"ast":null,"code":"var _jsxFileName = \"/Users/william/Dev/quicksilver/src/client/src/components/MenuBar.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport convertHtmlToJSX from 'html-to-jsx';\nimport FileSaver from 'file-saver';\nimport '../css/MenuBar.css';\nimport { toggleMenu } from '../reducers/menuReducer';\nimport { toggleCode, updateCSS, updateJS, updateHTML } from '../reducers/codeReducer';\nimport { toggleSaveForm } from '../reducers/saveReducer';\nimport { toggleLoad } from '../reducers/loadReducer';\nimport { toggleImport } from '../reducers/importReducer';\n\nconst JSZip = require(\"jszip\");\n\nconst MenuBar = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n\n  const clearCode = () => {\n    dispatch(updateJS(\"\"));\n    dispatch(updateCSS(\"\"));\n    dispatch(updateHTML(\"\"));\n  };\n\n  const export_content = `import React from 'react';\\nimport 'CSS_FILE_PATH';\\n\\nexport default const ComponentName = () => {\\n\\treturn (\\n${convertHtmlToJSX(state.code.html).replace(/^/gm, \"\\t\\t\")}\\n\\t)\\n};`;\n\n  const generateZip = () => {\n    var zip = new JSZip();\n    zip.file(\"testHTML.html\", state.code.html);\n    zip.file(\"testCSS.css\", state.code.css);\n    zip.file(\"testJS.js\", state.code.js);\n    zip.file(\"testJSX.js\", convertHtmlToJSX(export_content));\n    zip.generateAsync({\n      type: \"blob\"\n    }).then(function (content) {\n      FileSaver.saveAs(content, \"quicksilver.zip\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"action-btn close-btn\",\n    key: \"1\",\n    onClick: () => dispatch(toggleMenu()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Close Menu\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"action-btn code-btn\",\n    key: \"2\",\n    onClick: () => dispatch(toggleCode()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Show Code\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"action-btn clear-btn\",\n    key: \"3\",\n    onClick: () => clearCode(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Clear Component\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"action-btn load-btn\",\n    key: \"4\",\n    onClick: () => dispatch(toggleLoad()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Load Component\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"action-btn export-btn\",\n    key: \"5\",\n    onClick: () => generateZip(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Export Component\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"action-btn import-btn\",\n    key: \"6\",\n    onClick: () => dispatch(toggleImport()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Import File\"), state.user.currentUser ? [/*#__PURE__*/React.createElement(\"button\", {\n    className: \"menu-btn save-btn\",\n    key: \"7\",\n    onClick: () => dispatch(toggleSaveForm()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Save Component\")] : null);\n};\n\nexport default MenuBar;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/components/MenuBar.js"],"names":["React","useDispatch","useSelector","convertHtmlToJSX","FileSaver","toggleMenu","toggleCode","updateCSS","updateJS","updateHTML","toggleSaveForm","toggleLoad","toggleImport","JSZip","require","MenuBar","dispatch","state","clearCode","export_content","code","html","replace","generateZip","zip","file","css","js","generateAsync","type","then","content","saveAs","user","currentUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport convertHtmlToJSX from 'html-to-jsx';\nimport FileSaver from 'file-saver';\n\nimport '../css/MenuBar.css';\n\nimport { toggleMenu } from '../reducers/menuReducer';\nimport { toggleCode, updateCSS, updateJS, updateHTML } from '../reducers/codeReducer';\nimport { toggleSaveForm } from '../reducers/saveReducer';\nimport { toggleLoad } from '../reducers/loadReducer';\nimport { toggleImport } from '../reducers/importReducer';\n\nconst JSZip = require(\"jszip\");\n\nconst MenuBar = () => {\n\n  const dispatch = useDispatch();\n\n  const state = useSelector(state => state);\n\n  const clearCode = () => {\n    dispatch(updateJS(\"\"));\n    dispatch(updateCSS(\"\"));\n    dispatch(updateHTML(\"\"));\n  };\n\n  const export_content = `import React from 'react';\\nimport 'CSS_FILE_PATH';\\n\\nexport default const ComponentName = () => {\\n\\treturn (\\n${convertHtmlToJSX(state.code.html).replace(/^/gm, \"\\t\\t\")}\\n\\t)\\n};`;\n\n  const generateZip = () => {\n    var zip = new JSZip();\n\n    zip.file(\"testHTML.html\", state.code.html);\n    zip.file(\"testCSS.css\", state.code.css);\n    zip.file(\"testJS.js\", state.code.js);\n    zip.file(\"testJSX.js\", convertHtmlToJSX(export_content));\n\n    zip.generateAsync({type:\"blob\"})\n    .then(function(content) {\n      FileSaver.saveAs(content, \"quicksilver.zip\");\n    });\n  };\n\n  return (\n    <div className=\"menu-bar\">\n      <button className=\"action-btn close-btn\" key=\"1\" onClick={() => dispatch(toggleMenu())}>Close Menu</button>\n      <button className=\"action-btn code-btn\" key=\"2\" onClick={() => dispatch(toggleCode())}>Show Code</button>\n      <button className=\"action-btn clear-btn\" key=\"3\" onClick={() => clearCode()}>Clear Component</button>\n      <button className=\"action-btn load-btn\" key=\"4\" onClick={() => dispatch(toggleLoad())}>Load Component</button>\n      <button className=\"action-btn export-btn\" key=\"5\" onClick={() => generateZip()}>Export Component</button>\n      <button className=\"action-btn import-btn\" key=\"6\" onClick={() => dispatch(toggleImport())}>Import File</button>\n      { state.user.currentUser ? [\n        <button className=\"menu-btn save-btn\" key=\"7\" onClick={() => dispatch(toggleSaveForm())}>Save Component</button>\n      ] : null }\n    </div>\n  );\n};\n\nexport default MenuBar;\n"]},"metadata":{},"sourceType":"module"}