{"ast":null,"code":"var _jsxFileName = \"/Users/william/Dev/quicksilver/src/client/src/containers/ComponentListContainer.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setComponents, resetComponents } from '../reducers/loadReducer';\nimport ComponentItem from '../components/ComponentItem';\nimport SearchBar from '../components/SearchBar';\nimport '../css/ComponentListContainer.css';\n\nconst ComponentListContainer = () => {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const fetchComponents = isLibrary => {\n    const token = localStorage.getItem(\"token\");\n    const url = \"\";\n    isLibrary ? url = \"library_components\" : url = \"user_components\";\n    fetch(\"http://localhost:8080/\" + url, {\n      headers: {\n        \"Authorization\": `Bearer: ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      const components = data;\n      dispatch(resetComponents());\n      !isLibrary ? components = data.filter(c => c.user_id === state.user.currentUser.id) : null;\n      dispatch(setComponents(components));\n    });\n  };\n\n  useEffect(() => {\n    if (state.user.currentUser) {\n      fetchComponents(true);\n    }\n\n    ;\n  }, []);\n\n  const handleSwitchList = type => {\n    type === \"lib\" ? fetchComponents(true) : fetchComponents(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"component-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, state.user.currentUser ? [/*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"My Components\")] : null, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Library\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, state.load.components.map(c => /*#__PURE__*/React.createElement(ComponentItem, {\n    component: c,\n    key: Math.random() * 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 46\n    }\n  }))));\n};\n\nexport default ComponentListContainer;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/containers/ComponentListContainer.js"],"names":["React","useEffect","useSelector","useDispatch","setComponents","resetComponents","ComponentItem","SearchBar","ComponentListContainer","state","dispatch","fetchComponents","isLibrary","token","localStorage","getItem","url","fetch","headers","then","res","json","data","components","filter","c","user_id","user","currentUser","id","handleSwitchList","type","load","map","Math","random"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,yBAA/C;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,mCAAP;;AAEA,MAAMC,sBAAsB,GAAG,MAAM;AAEnC,QAAMC,KAAK,GAAGP,WAAW,CAACO,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,eAAe,GAAIC,SAAD,IAAe;AACrC,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,GAAG,GAAG,EAAZ;AACAJ,IAAAA,SAAS,GAAII,GAAG,GAAG,oBAAV,GAAmCA,GAAG,GAAG,iBAAlD;AACAC,IAAAA,KAAK,CAAC,2BAA2BD,GAA5B,EAAiC;AACpCE,MAAAA,OAAO,EAAE;AACP,yBAAkB,WAAUL,KAAM;AAD3B;AAD2B,KAAjC,CAAL,CAKGM,IALH,CAKQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALf,EAMGF,IANH,CAMQG,IAAI,IAAI;AACZ,YAAMC,UAAU,GAAGD,IAAnB;AACAZ,MAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR;AACA,OAACO,SAAD,GACKW,UAAU,GAAGD,IAAI,CAACE,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcjB,KAAK,CAACkB,IAAN,CAAWC,WAAX,CAAuBC,EAAtD,CADlB,GAEI,IAFJ;AAGAnB,MAAAA,QAAQ,CAACN,aAAa,CAACmB,UAAD,CAAd,CAAR;AACD,KAbH;AAcD,GAlBD;;AAoBAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,KAAK,CAACkB,IAAN,CAAWC,WAAf,EAA4B;AAC1BjB,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;;AAAA;AACF,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMmB,gBAAgB,GAAIC,IAAD,IAAU;AACjCA,IAAAA,IAAI,KAAK,KAAT,GAAiBpB,eAAe,CAAC,IAAD,CAAhC,GAAyCA,eAAe,CAAC,KAAD,CAAxD;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,KAAK,CAACkB,IAAN,CAAWC,WAAX,GAAyB,cACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADyB,CAAzB,GAEE,IAHN,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOnB,KAAK,CAACuB,IAAN,CAAWT,UAAX,CAAsBU,GAAtB,CAA0BR,CAAC,iBAAK,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEA,CAA1B;AAA6B,IAAA,GAAG,EAAGS,IAAI,CAACC,MAAL,KAAgB,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,CAAP,CALF,CADF;AASD,CA5CD;;AA8CA,eAAe3B,sBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setComponents, resetComponents } from '../reducers/loadReducer';\nimport ComponentItem from '../components/ComponentItem';\nimport SearchBar from '../components/SearchBar';\nimport '../css/ComponentListContainer.css';\n\nconst ComponentListContainer = () => {\n\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const fetchComponents = (isLibrary) => {\n    const token = localStorage.getItem(\"token\");\n    const url = \"\"\n    isLibrary ? (url = \"library_components\") : (url = \"user_components\");\n    fetch(\"http://localhost:8080/\" + url, {\n      headers: {\n        \"Authorization\": `Bearer: ${token}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        const components = data;\n        dispatch(resetComponents())\n        !isLibrary\n          ? (components = data.filter(c => c.user_id === state.user.currentUser.id))\n          : null;\n        dispatch(setComponents(components))\n      })\n  };\n\n  useEffect(() => {\n    if (state.user.currentUser) {\n      fetchComponents(true);\n    };\n  }, []);\n\n  const handleSwitchList = (type) => {\n    type === \"lib\" ? fetchComponents(true) : fetchComponents(false);\n  };\n\n  return (\n    <div className=\"component-list\">\n      { state.user.currentUser ? [\n        <button>My Components</button>,\n      ] : null }\n      <button>Library</button>\n      <div>{ state.load.components.map(c => (<ComponentItem component={c} key={(Math.random() * 1000)} />)) }</div>\n    </div>\n  );\n};\n\nexport default ComponentListContainer;\n"]},"metadata":{},"sourceType":"module"}