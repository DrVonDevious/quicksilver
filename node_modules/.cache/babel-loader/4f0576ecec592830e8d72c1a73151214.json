{"ast":null,"code":"var _jsxFileName = \"/Users/william/Dev/quicksilver/src/client/src/components/CodeBox.js\";\nimport React from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/css/css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/htmlmixed/htmlmixed';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateCSS, updateHTML, updateJS } from '../reducers/codeReducer';\n\nconst CodeBox = () => {\n  var pos = null;\n  const dispatch = useDispatch();\n  const codeState = useSelector(state => state.code);\n  const canvas = document.getElementsByClassName(\"main-canvas\");\n  console.log(pos);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"code-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, codeState.mode === \"css\" ? [/*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"CSS:\", /*#__PURE__*/React.createElement(CodeMirror, {\n    value: codeState.css,\n    options: {\n      mode: \"css\",\n      theme: \"material\",\n      lineNumbers: true\n    },\n    onChange: (editor, data, value) => {\n      pos = \"Hi\"; //editor.getCursor();\n\n      dispatch(updateCSS(editor.getValue()));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }))] : null, codeState.mode === \"html\" ? [/*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"HTML:\", /*#__PURE__*/React.createElement(CodeMirror, {\n    value: codeState.html,\n    options: {\n      mode: \"htmlmixed\",\n      theme: \"material\",\n      lineNumbers: true\n    },\n    onChange: e => dispatch(updateHTML(e.getValue())),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))] : null, codeState.mode === \"js\" ? [/*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"JavaScript:\", /*#__PURE__*/React.createElement(CodeMirror, {\n    value: codeState.js,\n    options: {\n      mode: \"javascript\",\n      theme: \"material\",\n      lineNumbers: true\n    },\n    onChange: e => dispatch(updateJS(e.getValue())),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))] : null);\n};\n\nexport default CodeBox;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/components/CodeBox.js"],"names":["React","UnControlled","CodeMirror","useSelector","useDispatch","updateCSS","updateHTML","updateJS","CodeBox","pos","dispatch","codeState","state","code","canvas","document","getElementsByClassName","console","log","mode","css","theme","lineNumbers","editor","data","value","getValue","html","e","js"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,+BAAP;AACA,OAAO,+BAAP;AAEA,OAAO,yBAAP;AACA,OAAO,uCAAP;AACA,OAAO,qCAAP;AAEA,SAAQC,YAAY,IAAIC,UAAxB,QAAyC,mBAAzC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,QAAhC,QAAgD,yBAAhD;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAEpB,MAAIC,GAAG,GAAG,IAAV;AAEA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,SAAS,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA7B;AACA,QAAMC,MAAM,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,CAAf;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIE,SAAS,CAACQ,IAAV,KAAmB,KAAnB,GAA2B,cAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAER,SAAS,CAACS,GADnB;AAEE,IAAA,OAAO,EAAE;AACPD,MAAAA,IAAI,EAAE,KADC;AAEPE,MAAAA,KAAK,EAAE,UAFA;AAGPC,MAAAA,WAAW,EAAE;AAHN,KAFX;AAOE,IAAA,QAAQ,EAAE,CAACC,MAAD,EAASC,IAAT,EAAeC,KAAf,KAAyB;AACjChB,MAAAA,GAAG,GAAG,IAAN,CADiC,CACvB;;AACVC,MAAAA,QAAQ,CAACL,SAAS,CAACkB,MAAM,CAACG,QAAP,EAAD,CAAV,CAAR;AACD,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAD2B,CAA3B,GAgBE,IAnBN,EAsBIf,SAAS,CAACQ,IAAV,KAAmB,MAAnB,GAA4B,cAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAER,SAAS,CAACgB,IADnB;AAEE,IAAA,OAAO,EAAE;AACPR,MAAAA,IAAI,EAAE,WADC;AAEPE,MAAAA,KAAK,EAAE,UAFA;AAGPC,MAAAA,WAAW,EAAE;AAHN,KAFX;AAOE,IAAA,QAAQ,EAAGM,CAAD,IAAOlB,QAAQ,CAACJ,UAAU,CAACsB,CAAC,CAACF,QAAF,EAAD,CAAX,CAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAD4B,CAA5B,GAaE,IAnCN,EAsCIf,SAAS,CAACQ,IAAV,KAAmB,IAAnB,GAA0B,cAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAER,SAAS,CAACkB,EADnB;AAEE,IAAA,OAAO,EAAE;AACPV,MAAAA,IAAI,EAAE,YADC;AAEPE,MAAAA,KAAK,EAAE,UAFA;AAGPC,MAAAA,WAAW,EAAE;AAHN,KAFX;AAOE,IAAA,QAAQ,EAAGM,CAAD,IAAOlB,QAAQ,CAACH,QAAQ,CAACqB,CAAC,CAACF,QAAF,EAAD,CAAT,CAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAD0B,CAA1B,GAaE,IAnDN,CADF;AAuDD,CAjED;;AAmEA,eAAelB,OAAf","sourcesContent":["import React from 'react';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\n\nimport 'codemirror/mode/css/css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/htmlmixed/htmlmixed';\n\nimport {UnControlled as CodeMirror} from 'react-codemirror2'\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { updateCSS, updateHTML, updateJS } from '../reducers/codeReducer';\n\nconst CodeBox = () => {\n\n  var pos = null\n\n  const dispatch = useDispatch();\n  const codeState = useSelector(state => state.code);\n  const canvas = document.getElementsByClassName(\"main-canvas\")\n\n  console.log(pos)\n\n  return (\n    <div className=\"code-box\">\n\n      {/* --------- CSS Code Box -------- */}\n      { codeState.mode === \"css\" ? [\n        <div>\n          CSS:\n          <CodeMirror\n            value={codeState.css}\n            options={{\n              mode: \"css\",\n              theme: \"material\",\n              lineNumbers: true\n            }}\n            onChange={(editor, data, value) => {\n              pos = \"Hi\"//editor.getCursor();\n              dispatch(updateCSS(editor.getValue()));\n            }}\n          />\n        </div>\n      ] : null }\n\n      {/* --------- HTML Code Box -------- */}\n      { codeState.mode === \"html\" ? [\n        <div>\n          HTML:\n          <CodeMirror\n            value={codeState.html}\n            options={{\n              mode: \"htmlmixed\",\n              theme: \"material\",\n              lineNumbers: true\n            }}\n            onChange={(e) => dispatch(updateHTML(e.getValue()))}\n          />\n        </div>\n      ] : null }\n\n      {/* ------ Javascript Code Box ----- */}\n      { codeState.mode === \"js\" ? [\n        <div>\n          JavaScript:\n          <CodeMirror\n            value={codeState.js}\n            options={{\n              mode: \"javascript\",\n              theme: \"material\",\n              lineNumbers: true\n            }}\n            onChange={(e) => dispatch(updateJS(e.getValue()))}\n          />\n        </div>\n      ] : null }\n    </div>\n  );\n};\n\nexport default CodeBox;\n"]},"metadata":{},"sourceType":"module"}