{"ast":null,"code":"import { createSlice, createAction } from '@reduxjs/toolkit';\nconst userSlice = createSlice({\n  name: \"userSlice\",\n  initialState: {\n    currentUser: null,\n    users: []\n  },\n  reducers: {\n    testUser(state, action) {\n      state.currentUser = action.payload;\n    },\n\n    setUsers(state, action) {\n      state.users = action.payload;\n    },\n\n    setUser(state, action) {\n      fetch(\"http://localhost:8080/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: action.payload.username,\n          password: action.payload.password\n        })\n      }).then(res => res.json()).then(data => {\n        localStorage.username = data.user.username;\n        localStorage.password = data.user.password;\n        localStorage.token = data.jwt;\n\n        if (data.jwt) {\n          state.currentUser = data.user;\n          console.log(`Welcome back ${data.user.username}!`);\n        } else {\n          console.log(\"Invalid Login\");\n        }\n\n        ;\n      });\n    }\n\n  }\n});\nexport const {\n  setUser,\n  setUsers\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/reducers/userReducer.js"],"names":["createSlice","createAction","userSlice","name","initialState","currentUser","users","reducers","testUser","state","action","payload","setUsers","setUser","fetch","method","headers","body","JSON","stringify","username","password","then","res","json","data","localStorage","user","token","jwt","console","log","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,QAA0C,kBAA1C;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,WADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE,IADD;AAEZC,IAAAA,KAAK,EAAE;AAFK,GAFc;AAM5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAAED,MAAAA,KAAK,CAACJ,WAAN,GAAoBK,MAAM,CAACC,OAA3B;AAAoC,KADtD;;AAERC,IAAAA,QAAQ,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAAED,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAArB;AAA8B,KAFhD;;AAGRE,IAAAA,OAAO,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACrBI,MAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,QAAAA,MAAM,EAAE,MAD2B;AAEnCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF0B;AAKnCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,QAAQ,EAAEV,MAAM,CAACC,OAAP,CAAeS,QADN;AAEnBC,UAAAA,QAAQ,EAAEX,MAAM,CAACC,OAAP,CAAeU;AAFN,SAAf;AAL6B,OAAhC,CAAL,CAUGC,IAVH,CAUQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVf,EAWGF,IAXH,CAWQG,IAAI,IAAI;AACZC,QAAAA,YAAY,CAACN,QAAb,GAAwBK,IAAI,CAACE,IAAL,CAAUP,QAAlC;AACAM,QAAAA,YAAY,CAACL,QAAb,GAAwBI,IAAI,CAACE,IAAL,CAAUN,QAAlC;AACAK,QAAAA,YAAY,CAACE,KAAb,GAAqBH,IAAI,CAACI,GAA1B;;AACA,YAAIJ,IAAI,CAACI,GAAT,EAAc;AACZpB,UAAAA,KAAK,CAACJ,WAAN,GAAoBoB,IAAI,CAACE,IAAzB;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeN,IAAI,CAACE,IAAL,CAAUP,QAAS,GAA/C;AACD,SAHD,MAGO;AACLU,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;;AAAA;AACF,OArBH;AAsBD;;AA1BO;AANkB,CAAD,CAA7B;AAoCA,OAAO,MAAM;AAAElB,EAAAA,OAAF;AAAWD,EAAAA;AAAX,IAAwBV,SAAS,CAAC8B,OAAxC;AACP,eAAe9B,SAAS,CAAC+B,OAAzB","sourcesContent":["import { createSlice, createAction } from '@reduxjs/toolkit';\n\nconst userSlice = createSlice({\n  name: \"userSlice\",\n  initialState: {\n    currentUser: null,\n    users: [],\n  },\n  reducers: {\n    testUser(state, action) { state.currentUser = action.payload },\n    setUsers(state, action) { state.users = action.payload },\n    setUser(state, action) {\n      fetch(\"http://localhost:8080/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: action.payload.username,\n          password: action.payload.password\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          localStorage.username = data.user.username;\n          localStorage.password = data.user.password;\n          localStorage.token = data.jwt;\n          if (data.jwt) {\n            state.currentUser = data.user;\n            console.log(`Welcome back ${data.user.username}!`);\n          } else {\n            console.log(\"Invalid Login\");\n          };\n        })\n    },\n  }\n});\n\nexport const { setUser, setUsers } = userSlice.actions;\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}