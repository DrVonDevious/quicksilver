{"ast":null,"code":"var _jsxFileName = \"/Users/william/Dev/quicksilver/src/client/src/containers/ComponentListContainer.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setComponents } from '../reducers/loadReducer';\nimport ComponentItem from '../components/ComponentItem';\nimport SearchBar from '../components/SearchBar';\nimport '../css/ComponentListContainer.css';\n\nconst ComponentListContainer = () => {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const fetchUserComponents = () => {\n    const token = localStorage.getItem(\"token\");\n    fetch(\"http://localhost:8080/user_components\", {\n      headers: {\n        \"Authorization\": `Bearer: ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      const components = data.filter(c => c.user_id === state.user.currentUser.id);\n      dispatch(setComponents(components));\n    });\n  };\n\n  useEffect(() => {\n    fetchUserComponents();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"component-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, state.user.currentUser ? fetchUserComponents() : null, /*#__PURE__*/React.createElement(SearchBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), \"My Components:\", state.load.components.map(c => /*#__PURE__*/React.createElement(ComponentItem, {\n    props: component,\n    key: Math.random() * 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 41\n    }\n  })));\n};\n\nexport default ComponentListContainer;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/containers/ComponentListContainer.js"],"names":["React","useEffect","useSelector","useDispatch","setComponents","ComponentItem","SearchBar","ComponentListContainer","state","dispatch","fetchUserComponents","token","localStorage","getItem","fetch","headers","then","res","json","data","components","filter","c","user_id","user","currentUser","id","load","map","component","Math","random"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,mCAAP;;AAEA,MAAMC,sBAAsB,GAAG,MAAM;AAEnC,QAAMC,KAAK,GAAGN,WAAW,CAACM,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,mBAAmB,GAAG,MAAM;AAChC,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAC,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC7CC,MAAAA,OAAO,EAAE;AACP,yBAAkB,WAAUJ,KAAM;AAD3B;AADoC,KAA1C,CAAL,CAKGK,IALH,CAKQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALf,EAMGF,IANH,CAMQG,IAAI,IAAI;AACZ,YAAMC,UAAU,GAAGD,IAAI,CAACE,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcf,KAAK,CAACgB,IAAN,CAAWC,WAAX,CAAuBC,EAAtD,CAAnB;AACAjB,MAAAA,QAAQ,CAACL,aAAa,CAACgB,UAAD,CAAd,CAAR;AACD,KATH;AAUD,GAZD;;AAcAnB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,mBAAmB;AACpB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,KAAK,CAACgB,IAAN,CAAWC,WAAX,GAAyBf,mBAAmB,EAA5C,GAAiD,IADrD,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,oBAIIF,KAAK,CAACmB,IAAN,CAAWP,UAAX,CAAsBQ,GAAtB,CAA0BN,CAAC,iBAAK,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEO,SAAtB;AAAiC,IAAA,GAAG,EAAGC,IAAI,CAACC,MAAL,KAAgB,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,CAJJ,CADF;AAQD,CA/BD;;AAiCA,eAAexB,sBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setComponents } from '../reducers/loadReducer';\nimport ComponentItem from '../components/ComponentItem';\nimport SearchBar from '../components/SearchBar';\nimport '../css/ComponentListContainer.css';\n\nconst ComponentListContainer = () => {\n\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const fetchUserComponents = () => {\n    const token = localStorage.getItem(\"token\");\n    fetch(\"http://localhost:8080/user_components\", {\n      headers: {\n        \"Authorization\": `Bearer: ${token}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        const components = data.filter(c => c.user_id === state.user.currentUser.id);\n        dispatch(setComponents(components))\n      })\n  };\n\n  useEffect(() => {\n    fetchUserComponents();\n  }, []);\n\n  return (\n    <div className=\"component-list\">\n      { state.user.currentUser ? fetchUserComponents() : null }\n      <SearchBar />\n      My Components:\n      { state.load.components.map(c => (<ComponentItem props={component} key={(Math.random() * 1000)} />)) }\n    </div>\n  );\n};\n\nexport default ComponentListContainer;\n"]},"metadata":{},"sourceType":"module"}