{"ast":null,"code":"var _jsxFileName = \"/Users/william/Dev/quicksilver/src/client/src/components/RegisterForm.js\";\nimport React from 'react';\nimport { setUser } from '../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleRegister = e => {\n    e.preventDefault();\n    var user = {\n      username: e.target[0].value,\n      password: e.target[1].value,\n      password_confirmation: e.target[2].value\n    };\n    postUser(user);\n  };\n\n  const postUser = user => {\n    fetch(\"http://localhost:8080/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: user.username,\n        password: user.password,\n        password_confirmation: user.password_confirmation\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.jwt) {\n        localStorage.username = data.user.username;\n        localStorage.password = data.user.password;\n        localStorage.token = data.jwt;\n        console.log(`Welcome ${data.user.username}!`);\n        dispatch(setUser(data.user));\n      } else {\n        console.log(data.error);\n        console.log(\"Invalid signup!\");\n      }\n\n      ;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleRegister(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Username: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Password: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Confirm Password: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/components/RegisterForm.js"],"names":["React","setUser","useDispatch","RegisterForm","dispatch","handleRegister","e","preventDefault","user","username","target","value","password","password_confirmation","postUser","fetch","method","headers","body","JSON","stringify","then","res","json","data","jwt","localStorage","token","console","log","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { setUser } from '../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\n\nconst RegisterForm = () => {\n\n  const dispatch = useDispatch();\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    var user = {\n      username: e.target[0].value,\n      password: e.target[1].value,\n      password_confirmation: e.target[2].value\n    };\n    postUser(user);\n  };\n\n  const postUser = (user) => {\n    fetch(\"http://localhost:8080/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: user.username,\n        password: user.password,\n        password_confirmation: user.password_confirmation\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.jwt) {\n          localStorage.username = data.user.username;\n          localStorage.password = data.user.password;\n          localStorage.token = data.jwt;\n          console.log(`Welcome ${data.user.username}!`);\n          dispatch(setUser(data.user));\n        } else {\n          console.log(data.error)\n          console.log(\"Invalid signup!\");\n        };\n      })\n  };\n\n  return (\n    <div>\n      <h2>Register</h2>\n      <form onSubmit={(e) => handleRegister(e)}>\n        <label>Username: </label>\n        <input type=\"text\" />\n        <br />\n        <label>Password: </label>\n        <input type=\"text\" />\n        <br />\n        <label>Confirm Password: </label>\n        <input type=\"text\" />\n        <br />\n        <button>Register</button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}