{"ast":null,"code":"var _jsxFileName = \"/Users/william/Dev/quicksilver/src/client/src/components/LoginForm.js\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst LoginForm = props => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const loginForm = useSelector(loginForm => state);\n\n  const handleUsernameChange = evt => {\n    setUsername(evt.target.value);\n  };\n\n  const handlePasswordChange = evt => {\n    setPassword(evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    fetch(`http://localhost:8080/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(resp => resp.json()).then(data => {\n      localStorage.setItem(\"token\", data.jwt);\n      props.handleLogin(data.user);\n    });\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n\n  const formDivStyle = {\n    margin: \"auto\",\n    padding: \"20px\",\n    width: \"80%\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: formDivStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"ui form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: username,\n    onChange: handleUsernameChange,\n    type: \"text\",\n    placeholder: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: password,\n    onChange: handlePasswordChange,\n    type: \"password\",\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ui button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Submit\"))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/components/LoginForm.js"],"names":["React","useState","useSelector","LoginForm","props","username","setUsername","password","setPassword","loginForm","state","handleUsernameChange","evt","target","value","handlePasswordChange","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","resp","json","data","localStorage","setItem","jwt","handleLogin","user","formDivStyle","margin","padding","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst LoginForm = (props) => {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const loginForm = useSelector((loginForm) => state);\n\n    const handleUsernameChange = (evt) => {\n      setUsername(evt.target.value)\n    }\n\n    const handlePasswordChange = (evt) => {\n      setPassword(evt.target.value)\n    }\n\n    const handleSubmit = (evt) => {\n      evt.preventDefault()\n      fetch(`http://localhost:8080/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      })\n        .then(resp => resp.json())\n        .then(data => {\n          localStorage.setItem(\"token\", data.jwt)\n          props.handleLogin(data.user)\n        })\n\n      setUsername(\"\")\n      setPassword(\"\")\n    }\n\n    const formDivStyle = {\n      margin: \"auto\",\n      padding: \"20px\",\n      width: \"80%\"\n    };\n\n    return(\n      <div>\n        <div style={formDivStyle}>\n          <h1>Log In</h1>\n          <form className=\"ui form\" onSubmit={handleSubmit}>\n            <div className=\"field\">\n              <label>Username</label>\n              <input value={username} onChange={handleUsernameChange} type=\"text\" placeholder=\"username\"/>\n            </div>\n            <div className=\"field\">\n              <label>Password</label>\n              <input value={password} onChange={handlePasswordChange} type=\"password\" placeholder=\"password\"/>\n            </div>\n\n            <button className=\"ui button\" type=\"submit\">Submit</button>\n          </form>\n        </div>\n      </div>\n    );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}