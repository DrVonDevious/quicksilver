{"ast":null,"code":"import { createSlice, createAction } from '@reduxjs/toolkit';\nconst userSlice = createSlice({\n  name: \"userSlice\",\n  initialState: {\n    currentUser: null,\n    users: []\n  },\n  reducers: {\n    setUsers(state, action) {\n      state.users = action.payload;\n    },\n\n    setUser(state, action) {\n      fetch(\"http://localhost:8080/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: action.payload.username,\n          password: action.payload.password\n        })\n      }).then(res => res.json()).then(user => {\n        localStorage.username = user.username;\n        localStorage.password = user.password;\n        localStorage.token = user.token;\n        console.log(user);\n\n        if (user.jwt) {\n          state.currentUser = user;\n          console.log(`Welcome back ${user.username}!`);\n        } else {\n          console.log(\"Invalid Login\");\n        }\n\n        ;\n      });\n    }\n\n  }\n});\nexport const {\n  setUser,\n  setUsers\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/reducers/userReducer.js"],"names":["createSlice","createAction","userSlice","name","initialState","currentUser","users","reducers","setUsers","state","action","payload","setUser","fetch","method","headers","body","JSON","stringify","username","password","then","res","json","user","localStorage","token","console","log","jwt","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,QAA0C,kBAA1C;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,WADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE,IADD;AAEZC,IAAAA,KAAK,EAAE;AAFK,GAFc;AAM5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAAED,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAArB;AAA8B,KADhD;;AAERC,IAAAA,OAAO,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACrBG,MAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,QAAAA,MAAM,EAAE,MAD2B;AAEnCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF0B;AAKnCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,QAAQ,EAAET,MAAM,CAACC,OAAP,CAAeQ,QADN;AAEnBC,UAAAA,QAAQ,EAAEV,MAAM,CAACC,OAAP,CAAeS;AAFN,SAAf;AAL6B,OAAhC,CAAL,CAUGC,IAVH,CAUQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVf,EAWGF,IAXH,CAWQG,IAAI,IAAI;AACZC,QAAAA,YAAY,CAACN,QAAb,GAAwBK,IAAI,CAACL,QAA7B;AACAM,QAAAA,YAAY,CAACL,QAAb,GAAwBI,IAAI,CAACJ,QAA7B;AACAK,QAAAA,YAAY,CAACC,KAAb,GAAqBF,IAAI,CAACE,KAA1B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,YAAIA,IAAI,CAACK,GAAT,EAAc;AACZpB,UAAAA,KAAK,CAACJ,WAAN,GAAoBmB,IAApB;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeJ,IAAI,CAACL,QAAS,GAA1C;AACD,SAHD,MAGO;AACLQ,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;;AAAA;AACF,OAtBH;AAuBD;;AA1BO;AANkB,CAAD,CAA7B;AAoCA,OAAO,MAAM;AAAEhB,EAAAA,OAAF;AAAWJ,EAAAA;AAAX,IAAwBN,SAAS,CAAC4B,OAAxC;AACP,eAAe5B,SAAS,CAAC6B,OAAzB","sourcesContent":["import { createSlice, createAction } from '@reduxjs/toolkit';\n\nconst userSlice = createSlice({\n  name: \"userSlice\",\n  initialState: {\n    currentUser: null,\n    users: [],\n  },\n  reducers: {\n    setUsers(state, action) { state.users = action.payload },\n    setUser(state, action) {\n      fetch(\"http://localhost:8080/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: action.payload.username,\n          password: action.payload.password\n        })\n      })\n        .then(res => res.json())\n        .then(user => {\n          localStorage.username = user.username;\n          localStorage.password = user.password;\n          localStorage.token = user.token;\n          console.log(user)\n          if (user.jwt) {\n            state.currentUser = user\n            console.log(`Welcome back ${user.username}!`)\n          } else {\n            console.log(\"Invalid Login\")\n          };\n        })\n    },\n  }\n});\n\nexport const { setUser, setUsers } = userSlice.actions;\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}