{"ast":null,"code":"var _jsxFileName = \"/Users/william/Dev/quicksilver/src/client/src/containers/ComponentListContainer.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\nimport { setComponents, resetComponents } from '../reducers/loadReducer';\nimport ComponentItem from '../components/ComponentItem';\nimport SearchBar from '../components/SearchBar';\nimport '../css/ComponentListContainer.css';\n\nconst ComponentListContainer = () => {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const fetchComponents = isLibrary => {\n    const token = localStorage.getItem(\"token\");\n    var url = \"\";\n    isLibrary ? url = \"library_components\" : url = \"user_components\";\n    fetch(\"http://localhost:8080/\" + url, {\n      headers: {\n        \"Authorization\": `Bearer: ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      var components = data;\n      dispatch(resetComponents());\n\n      if (!isLibrary) {\n        components = data.filter(c => c.user_id === state.user.currentUser.id);\n      }\n\n      ;\n      dispatch(setComponents(components));\n    });\n  };\n\n  useEffect(() => {\n    if (state.user.currentUser) {\n      fetchComponents(true);\n    }\n\n    ;\n  }, []);\n\n  const handleSwitchList = type => {\n    type === \"lib\" ? fetchComponents(true) : fetchComponents(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"component-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, state.user.currentUser ? [/*#__PURE__*/React.createElement(\"button\", {\n    className: \"component-tab\",\n    onClick: () => handleSwitchList(\"user\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"My Components\")] : null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"component-tab\",\n    onClick: () => handleSwitchList(\"lib\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Library\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"component-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), state.load.components.filter(c => c.name.includes(state.load.query)).map(c => /*#__PURE__*/React.createElement(ComponentItem, {\n    component: c,\n    key: uuid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 24\n    }\n  }))));\n};\n\nexport default ComponentListContainer;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/containers/ComponentListContainer.js"],"names":["React","useEffect","useSelector","useDispatch","v4","uuid","setComponents","resetComponents","ComponentItem","SearchBar","ComponentListContainer","state","dispatch","fetchComponents","isLibrary","token","localStorage","getItem","url","fetch","headers","then","res","json","data","components","filter","c","user_id","user","currentUser","id","handleSwitchList","type","load","name","includes","query","map"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\n\nimport { setComponents, resetComponents } from '../reducers/loadReducer';\nimport ComponentItem from '../components/ComponentItem';\nimport SearchBar from '../components/SearchBar';\nimport '../css/ComponentListContainer.css';\n\nconst ComponentListContainer = () => {\n\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const fetchComponents = (isLibrary) => {\n    const token = localStorage.getItem(\"token\");\n    var url = \"\"\n    isLibrary ? (url = \"library_components\") : (url = \"user_components\");\n    fetch(\"http://localhost:8080/\" + url, {\n      headers: {\n        \"Authorization\": `Bearer: ${token}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        var components = data;\n        dispatch(resetComponents())\n        if (!isLibrary) {\n          components = data.filter(c => c.user_id === state.user.currentUser.id)\n        };\n        dispatch(setComponents(components))\n      })\n  };\n\n  useEffect(() => {\n    if (state.user.currentUser) {\n      fetchComponents(true);\n    };\n  }, []);\n\n  const handleSwitchList = (type) => {\n    type === \"lib\" ? fetchComponents(true) : fetchComponents(false);\n  };\n\n  return (\n    <div className=\"component-container\">\n      { state.user.currentUser ? [\n        <button className=\"component-tab\" onClick={() => handleSwitchList(\"user\")}>My Components</button>,\n      ] : null }\n      <button className=\"component-tab\" onClick={() => handleSwitchList(\"lib\")}>Library</button>\n      <div className=\"component-list\">\n      <SearchBar />\n        {\n          state.load.components\n            .filter(c => c.name.includes(state.load.query))\n            .map(c => (<ComponentItem component={c} key={uuid()} />))\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default ComponentListContainer;\n"]},"metadata":{},"sourceType":"module"}