{"ast":null,"code":"\"use strict\";\n\nmodule.exports = parse;\nvar re_ws = /^\\s/,\n    re_name = /^(?:\\\\.|[\\w\\-\\u00c0-\\uFFFF])+/,\n    re_escape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/ig,\n    //modified version of https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L87\nre_attr = /^\\s*((?:\\\\.|[\\w\\u00c0-\\uFFFF\\-])+)\\s*(?:(\\S?)=\\s*(?:(['\"])(.*?)\\3|(#?(?:\\\\.|[\\w\\u00c0-\\uFFFF\\-])*)|)|)\\s*(i)?\\]/;\nvar actionTypes = {\n  __proto__: null,\n  \"undefined\": \"exists\",\n  \"\": \"equals\",\n  \"~\": \"element\",\n  \"^\": \"start\",\n  \"$\": \"end\",\n  \"*\": \"any\",\n  \"!\": \"not\",\n  \"|\": \"hyphen\"\n};\nvar simpleSelectors = {\n  __proto__: null,\n  \">\": \"child\",\n  \"<\": \"parent\",\n  \"~\": \"sibling\",\n  \"+\": \"adjacent\"\n};\nvar attribSelectors = {\n  __proto__: null,\n  \"#\": [\"id\", \"equals\"],\n  \".\": [\"class\", \"element\"]\n}; //unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L139\n\nfunction funescape(_, escaped, escapedWhitespace) {\n  var high = \"0x\" + escaped - 0x10000; // NaN means non-codepoint\n  // Support: Firefox\n  // Workaround erroneous numeric interpretation of +\"0x\"\n\n  return high !== high || escapedWhitespace ? escaped : // BMP codepoint\n  high < 0 ? String.fromCharCode(high + 0x10000) : // Supplemental Plane codepoint (surrogate pair)\n  String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n}\n\nfunction unescapeCSS(str) {\n  return str.replace(re_escape, funescape);\n}\n\nfunction getClosingPos(selector) {\n  var pos = 1,\n      counter = 1,\n      len = selector.length;\n\n  for (; counter > 0 && pos < len; pos++) {\n    if (selector.charAt(pos) === \"(\") counter++;else if (selector.charAt(pos) === \")\") counter--;\n  }\n\n  return pos;\n}\n\nfunction parse(selector, options) {\n  selector = (selector + \"\").trimLeft();\n  var subselects = [],\n      tokens = [],\n      sawWS = false,\n      data,\n      firstChar,\n      name;\n\n  function getName() {\n    var sub = selector.match(re_name)[0];\n    selector = selector.substr(sub.length);\n    return unescapeCSS(sub);\n  }\n\n  while (selector !== \"\") {\n    if (re_name.test(selector)) {\n      if (sawWS) {\n        tokens.push({\n          type: \"descendant\"\n        });\n        sawWS = false;\n      }\n\n      name = getName();\n\n      if (!options || (\"lowerCaseTags\" in options ? options.lowerCaseTags : !options.xmlMode)) {\n        name = name.toLowerCase();\n      }\n\n      tokens.push({\n        type: \"tag\",\n        name: name\n      });\n    } else if (re_ws.test(selector)) {\n      sawWS = true;\n      selector = selector.trimLeft();\n    } else {\n      firstChar = selector.charAt(0);\n      selector = selector.substr(1);\n\n      if (firstChar in simpleSelectors) {\n        tokens.push({\n          type: simpleSelectors[firstChar]\n        });\n        selector = selector.trimLeft();\n        sawWS = false;\n        continue;\n      } else if (firstChar === \",\") {\n        if (tokens.length === 0) {\n          throw new SyntaxError(\"empty sub-selector\");\n        }\n\n        subselects.push(tokens);\n        tokens = [];\n        selector = selector.trimLeft();\n        sawWS = false;\n        continue;\n      } else if (sawWS) {\n        tokens.push({\n          type: \"descendant\"\n        });\n        sawWS = false;\n      }\n\n      if (firstChar === \"*\") {\n        tokens.push({\n          type: \"universal\"\n        });\n      } else if (firstChar in attribSelectors) {\n        tokens.push({\n          type: \"attribute\",\n          name: attribSelectors[firstChar][0],\n          action: attribSelectors[firstChar][1],\n          value: getName(),\n          ignoreCase: false\n        });\n      } else if (firstChar === \"[\") {\n        data = selector.match(re_attr);\n\n        if (!data) {\n          throw new SyntaxError(\"Malformed attribute selector: \" + selector);\n        }\n\n        selector = selector.substr(data[0].length);\n        name = unescapeCSS(data[1]);\n\n        if (!options || (\"lowerCaseAttributeNames\" in options ? options.lowerCaseAttributeNames : !options.xmlMode)) {\n          name = name.toLowerCase();\n        }\n\n        tokens.push({\n          type: \"attribute\",\n          name: name,\n          action: actionTypes[data[2]],\n          value: unescapeCSS(data[4] || data[5] || \"\"),\n          ignoreCase: !!data[6]\n        });\n      } else if (firstChar === \":\") {\n        //if(selector.charAt(0) === \":\"){} //TODO pseudo-element\n        name = getName().toLowerCase();\n        data = null;\n\n        if (selector.charAt(0) === \"(\") {\n          var pos = getClosingPos(selector);\n          data = selector.substr(1, pos - 2);\n          selector = selector.substr(pos);\n        }\n\n        tokens.push({\n          type: \"pseudo\",\n          name: name,\n          data: data\n        });\n      } else {\n        //otherwise, the parser needs to throw or it would enter an infinite loop\n        throw new SyntaxError(\"Unmatched selector: \" + firstChar + selector);\n      }\n    }\n  }\n\n  if (subselects.length > 0 && tokens.length === 0) {\n    throw new SyntaxError(\"empty sub-selector\");\n  }\n\n  subselects.push(tokens);\n  return subselects;\n}","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/node_modules/cheerio/node_modules/css-what/index.js"],"names":["module","exports","parse","re_ws","re_name","re_escape","re_attr","actionTypes","__proto__","simpleSelectors","attribSelectors","funescape","_","escaped","escapedWhitespace","high","String","fromCharCode","unescapeCSS","str","replace","getClosingPos","selector","pos","counter","len","length","charAt","options","trimLeft","subselects","tokens","sawWS","data","firstChar","name","getName","sub","match","substr","test","push","type","lowerCaseTags","xmlMode","toLowerCase","SyntaxError","action","value","ignoreCase","lowerCaseAttributeNames"],"mappings":"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","sourcesContent":["\"use strict\";\n\nmodule.exports = parse;\n\nvar re_ws = /^\\s/,\n    re_name = /^(?:\\\\.|[\\w\\-\\u00c0-\\uFFFF])+/,\n    re_escape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/ig,\n    //modified version of https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L87\n    re_attr = /^\\s*((?:\\\\.|[\\w\\u00c0-\\uFFFF\\-])+)\\s*(?:(\\S?)=\\s*(?:(['\"])(.*?)\\3|(#?(?:\\\\.|[\\w\\u00c0-\\uFFFF\\-])*)|)|)\\s*(i)?\\]/;\n\nvar actionTypes = {\n\t__proto__: null,\n\t\"undefined\": \"exists\",\n\t\"\":  \"equals\",\n\t\"~\": \"element\",\n\t\"^\": \"start\",\n\t\"$\": \"end\",\n\t\"*\": \"any\",\n\t\"!\": \"not\",\n\t\"|\": \"hyphen\"\n};\n\nvar simpleSelectors = {\n\t__proto__: null,\n\t\">\": \"child\",\n\t\"<\": \"parent\",\n\t\"~\": \"sibling\",\n\t\"+\": \"adjacent\"\n};\n\nvar attribSelectors = {\n\t__proto__: null,\n\t\"#\": [\"id\", \"equals\"],\n\t\".\": [\"class\", \"element\"]\n};\n\n//unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L139\nfunction funescape( _, escaped, escapedWhitespace ) {\n\tvar high = \"0x\" + escaped - 0x10000;\n\t// NaN means non-codepoint\n\t// Support: Firefox\n\t// Workaround erroneous numeric interpretation of +\"0x\"\n\treturn high !== high || escapedWhitespace ?\n\t\tescaped :\n\t\t// BMP codepoint\n\t\thigh < 0 ?\n\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n}\n\nfunction unescapeCSS(str){\n\treturn str.replace(re_escape, funescape);\n}\n\nfunction getClosingPos(selector){\n\tvar pos = 1, counter = 1, len = selector.length;\n\n\tfor(; counter > 0 && pos < len; pos++){\n\t\tif(selector.charAt(pos) === \"(\") counter++;\n\t\telse if(selector.charAt(pos) === \")\") counter--;\n\t}\n\n\treturn pos;\n}\n\nfunction parse(selector, options){\n\tselector = (selector + \"\").trimLeft();\n\n\tvar subselects = [],\n\t    tokens = [],\n\t    sawWS = false,\n\t    data, firstChar, name;\n\t\n\tfunction getName(){\n\t\tvar sub = selector.match(re_name)[0];\n\t\tselector = selector.substr(sub.length);\n\t\treturn unescapeCSS(sub);\n\t}\n\n\twhile(selector !== \"\"){\n\t\tif(re_name.test(selector)){\n\t\t\tif(sawWS){\n\t\t\t\ttokens.push({type: \"descendant\"});\n\t\t\t\tsawWS = false;\n\t\t\t}\n\n\t\t\tname = getName();\n\n\t\t\tif(!options || (\"lowerCaseTags\" in options ? options.lowerCaseTags : !options.xmlMode)){\n\t\t\t\tname = name.toLowerCase();\n\t\t\t}\n\n\t\t\ttokens.push({type: \"tag\", name: name});\n\t\t} else if(re_ws.test(selector)){\n\t\t\tsawWS = true;\n\t\t\tselector = selector.trimLeft();\n\t\t} else {\n\t\t\tfirstChar = selector.charAt(0);\n\t\t\tselector = selector.substr(1);\n\n\t\t\tif(firstChar in simpleSelectors){\n\t\t\t\ttokens.push({type: simpleSelectors[firstChar]});\n\t\t\t\tselector = selector.trimLeft();\n\t\t\t\tsawWS = false;\n\t\t\t\tcontinue;\n\t\t\t} else if(firstChar === \",\"){\n\t\t\t\tif(tokens.length === 0){\n\t\t\t\t\tthrow new SyntaxError(\"empty sub-selector\");\n\t\t\t\t}\n\t\t\t\tsubselects.push(tokens);\n\t\t\t\ttokens = [];\n\n\t\t\t\tselector = selector.trimLeft();\n\t\t\t\tsawWS = false;\n\t\t\t\tcontinue;\n\t\t\t} else if(sawWS){\n\t\t\t\ttokens.push({type: \"descendant\"});\n\t\t\t\tsawWS = false;\n\t\t\t}\n\n\t\t\tif(firstChar === \"*\"){\n\t\t\t\ttokens.push({type: \"universal\"});\n\t\t\t} else if(firstChar in attribSelectors){\n\t\t\t\ttokens.push({\n\t\t\t\t\ttype: \"attribute\",\n\t\t\t\t\tname: attribSelectors[firstChar][0],\n\t\t\t\t\taction: attribSelectors[firstChar][1],\n\t\t\t\t\tvalue: getName(),\n\t\t\t\t\tignoreCase: false\n\t\t\t\t});\n\t\t\t} else if(firstChar === \"[\"){\n\t\t\t\tdata = selector.match(re_attr);\n\t\t\t\tif(!data){\n\t\t\t\t\tthrow new SyntaxError(\"Malformed attribute selector: \" + selector);\n\t\t\t\t}\n\t\t\t\tselector = selector.substr(data[0].length);\n\t\t\t\tname = unescapeCSS(data[1]);\n\n\t\t\t\tif(\n\t\t\t\t\t!options || (\n\t\t\t\t\t\t\"lowerCaseAttributeNames\" in options ?\n\t\t\t\t\t\t\toptions.lowerCaseAttributeNames :\n\t\t\t\t\t\t\t!options.xmlMode\n\t\t\t\t\t)\n\t\t\t\t){\n\t\t\t\t\tname = name.toLowerCase();\n\t\t\t\t}\n\n\t\t\t\ttokens.push({\n\t\t\t\t\ttype: \"attribute\",\n\t\t\t\t\tname: name,\n\t\t\t\t\taction: actionTypes[data[2]],\n\t\t\t\t\tvalue: unescapeCSS(data[4] || data[5] || \"\"),\n\t\t\t\t\tignoreCase: !!data[6]\n\t\t\t\t});\n\t\t\t\t\n\t\t\t} else if(firstChar === \":\"){\n\t\t\t\t//if(selector.charAt(0) === \":\"){} //TODO pseudo-element\n\t\t\t\tname = getName().toLowerCase();\n\t\t\t\tdata = null;\n\t\t\t\t\n\t\t\t\tif(selector.charAt(0) === \"(\"){\n\t\t\t\t\tvar pos = getClosingPos(selector);\n\t\t\t\t\tdata = selector.substr(1, pos - 2);\n\t\t\t\t\tselector = selector.substr(pos);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttokens.push({type: \"pseudo\", name: name, data: data});\n\t\t\t} else {\n\t\t\t\t//otherwise, the parser needs to throw or it would enter an infinite loop\n\t\t\t\tthrow new SyntaxError(\"Unmatched selector: \" + firstChar + selector);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(subselects.length > 0 && tokens.length === 0){\n\t\tthrow new SyntaxError(\"empty sub-selector\");\n\t}\n\tsubselects.push(tokens);\n\treturn subselects;\n}"]},"metadata":{},"sourceType":"script"}