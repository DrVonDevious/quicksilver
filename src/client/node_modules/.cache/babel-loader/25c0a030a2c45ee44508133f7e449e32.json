{"ast":null,"code":"var _jsxFileName = \"/Users/william/Dev/quicksilver/src/client/src/components/LoginForm.js\";\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { setUser } from '../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport '../css/LoginForm.css';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const history = useHistory(); // Parses our form data and sends it to post function\n\n  const handleLogin = e => {\n    e.preventDefault();\n    var user = {\n      username: e.target[0].value,\n      password: e.target[1].value\n    };\n    postUser(user);\n  }; // posts a user to login for authentication\n  // and logs any errors that exist\n\n\n  const postUser = user => {\n    fetch(\"http://localhost:8080/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: user.username,\n        password: user.password\n      })\n    }).then(res => res.json()).then(data => {\n      // if the user is authenticated\n      if (data.jwt) {\n        localStorage.setItem(\"username\", data.user.username);\n        localStorage.setItem(\"password\", data.user.password);\n        localStorage.setItem(\"token\", data.jwt);\n        history.push(\"/\");\n        console.log(`Welcome back ${data.user.username}!`);\n        dispatch(setUser(data.user));\n      } else {\n        alert(\"Login Invalid! Username or Password is Incorrect.\");\n        console.log(\"Invalid Login\");\n      }\n\n      ;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleLogin(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Username: \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-label\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Password: \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/components/LoginForm.js"],"names":["React","useHistory","setUser","useDispatch","LoginForm","dispatch","history","handleLogin","e","preventDefault","user","username","target","value","password","postUser","fetch","method","headers","body","JSON","stringify","then","res","json","data","jwt","localStorage","setItem","push","console","log","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { setUser } from '../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport '../css/LoginForm.css';\n\nconst LoginForm = () => {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // Parses our form data and sends it to post function\n  const handleLogin = (e) => {\n    e.preventDefault();\n    var user = {\n      username: e.target[0].value,\n      password: e.target[1].value\n    };\n    postUser(user);\n  };\n\n  // posts a user to login for authentication\n  // and logs any errors that exist\n  const postUser = (user) => {\n    fetch(\"http://localhost:8080/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: user.username,\n        password: user.password\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        // if the user is authenticated\n        if (data.jwt) {\n          localStorage.setItem(\"username\", data.user.username);\n          localStorage.setItem(\"password\", data.user.password);\n          localStorage.setItem(\"token\", data.jwt);\n          history.push(\"/\");\n          console.log(`Welcome back ${data.user.username}!`);\n          dispatch(setUser(data.user));\n        } else {\n          alert(\"Login Invalid! Username or Password is Incorrect.\");\n          console.log(\"Invalid Login\");\n        };\n      })\n  };\n\n  return (\n    <div className=\"login-form\">\n      <h2>Login</h2>\n      <form onSubmit={(e) => handleLogin(e)}>\n        <label className=\"form-label\">Username: </label>\n        <br />\n        <input className=\"form-label\" type=\"text\" />\n        <br />\n        <label>Password: </label>\n        <br />\n        <input type=\"text\" />\n        <br />\n        <button>Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}