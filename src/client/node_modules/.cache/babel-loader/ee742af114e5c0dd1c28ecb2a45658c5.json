{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // A slice is a function from toolkit that combines the functionality\n// of an action and a reducer into one\n\nconst codeSlice = createSlice({\n  name: \"codeSlice\",\n  initialState: {\n    codeState: false,\n    mode: \"html\",\n    css: \"\",\n    html: \"\",\n    js: \"\"\n  },\n  // actions are auto-generated by the creation of the reducers\n  reducers: {\n    updateCSS(state, action) {\n      state.css = action.payload;\n    },\n\n    updateHTML(state, action) {\n      state.html = action.payload;\n    },\n\n    updateJS(state, action) {\n      state.js = action.payload;\n    },\n\n    toggleCode(state, action) {\n      state.codeState = !state.codeState;\n    },\n\n    setMode(state, action) {\n      state.mode = action.payload;\n    },\n\n    resetCode(state, action) {\n      state.codeState = false, state.css = \"\", state.html = \"\", state.js = \"\";\n    }\n\n  }\n});\nexport const {\n  toggleCode,\n  setMode,\n  updateCSS,\n  updateHTML,\n  updateJS,\n  resetCode\n} = codeSlice.actions;\nexport default codeSlice.reducer;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/reducers/codeReducer.js"],"names":["createSlice","codeSlice","name","initialState","codeState","mode","css","html","js","reducers","updateCSS","state","action","payload","updateHTML","updateJS","toggleCode","setMode","resetCode","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAEA;AACA;;AACA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,WADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE,KADC;AAEZC,IAAAA,IAAI,EAAE,MAFM;AAGZC,IAAAA,GAAG,EAAE,EAHO;AAIZC,IAAAA,IAAI,EAAE,EAJM;AAKZC,IAAAA,EAAE,EAAE;AALQ,GAFc;AAU5B;AACAC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAAED,MAAAA,KAAK,CAACL,GAAN,GAAYM,MAAM,CAACC,OAAnB;AAA4B,KAD/C;;AAERC,IAAAA,UAAU,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAAED,MAAAA,KAAK,CAACJ,IAAN,GAAaK,MAAM,CAACC,OAApB;AAA6B,KAFjD;;AAGRE,IAAAA,QAAQ,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AAAED,MAAAA,KAAK,CAACH,EAAN,GAAWI,MAAM,CAACC,OAAlB;AAA2B,KAH7C;;AAIRG,IAAAA,UAAU,CAACL,KAAD,EAAQC,MAAR,EAAgB;AAAED,MAAAA,KAAK,CAACP,SAAN,GAAkB,CAACO,KAAK,CAACP,SAAzB;AAAoC,KAJxD;;AAKRa,IAAAA,OAAO,CAACN,KAAD,EAAQC,MAAR,EAAgB;AAAED,MAAAA,KAAK,CAACN,IAAN,GAAaO,MAAM,CAACC,OAApB;AAA6B,KAL9C;;AAMRK,IAAAA,SAAS,CAACP,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB,EACAO,KAAK,CAACL,GAAN,GAAY,EADZ,EAEAK,KAAK,CAACJ,IAAN,GAAa,EAFb,EAGAI,KAAK,CAACH,EAAN,GAAW,EAHX;AAID;;AAXO;AAXkB,CAAD,CAA7B;AA0BA,OAAO,MAAM;AAAEQ,EAAAA,UAAF;AAAcC,EAAAA,OAAd;AAAuBP,EAAAA,SAAvB;AAAkCI,EAAAA,UAAlC;AAA8CC,EAAAA,QAA9C;AAAwDG,EAAAA;AAAxD,IAAsEjB,SAAS,CAACkB,OAAtF;AACP,eAAelB,SAAS,CAACmB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n// A slice is a function from toolkit that combines the functionality\n// of an action and a reducer into one\nconst codeSlice = createSlice({\n  name: \"codeSlice\",\n  initialState: {\n    codeState: false,\n    mode: \"html\",\n    css: \"\",\n    html: \"\",\n    js: \"\"\n  },\n\n  // actions are auto-generated by the creation of the reducers\n  reducers: {\n    updateCSS(state, action) { state.css = action.payload },\n    updateHTML(state, action) { state.html = action.payload },\n    updateJS(state, action) { state.js = action.payload },\n    toggleCode(state, action) { state.codeState = !state.codeState },\n    setMode(state, action) { state.mode = action.payload },\n    resetCode(state, action) {\n      state.codeState = false,\n      state.css = \"\",\n      state.html = \"\",\n      state.js = \"\"\n    },\n  }\n});\n\nexport const { toggleCode, setMode, updateCSS, updateHTML, updateJS, resetCode } = codeSlice.actions;\nexport default codeSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}