{"ast":null,"code":"var _jsxFileName = \"/Users/william/Dev/quicksilver/src/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { configureStore, createSlice } from '@reduxjs/toolkit';\nimport initialState from './state';\nimport { rootReducer } from './reducers/rootReducer';\nimport RegisterContainer from './containers/RegisterContainer';\nimport LoginContainer from './containers/LoginContainer';\nimport NavBar from './containers/NavBar';\n\nconst App = () => {\n  const store = configureStore({\n    reducer: rootReducer\n  });\n  const loginFormSlice = createSlice({\n    name: \"loginForm\",\n    initialState: initialState.loginForm,\n    reducers: {\n      toggleLogin: (state, action) => {\n        console.log(state);\n      }\n    }\n  });\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      fetch(`http://localhost:8080/auto_login`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(resp => resp.json()).then(data => {\n        setUser(data); // console.log(data)\n      });\n    }\n  }, []);\n\n  const handleLogin = user => {\n    setUser(user);\n  };\n\n  const handleFormSwitch = input => {\n    store.dispatch(loginForm(\"loginForm\"));\n  };\n\n  const handleAuthClick = () => {\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:8080/user_is_authed`, {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(resp => resp.json()).then(data => console.log(data));\n  };\n\n  const renderForm = () => {\n    return store.getState().loginForm ? [/*#__PURE__*/React.createElement(LoginContainer, {\n      handleLogin: handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    })] : null, store.getState().registerForm ? [/*#__PURE__*/React.createElement(RegisterContainer, {\n      handleLogin: handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 40\n      }\n    })] : null;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    handleFormSwitch: handleFormSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), renderForm(), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAuthClick,\n    className: \"ui button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Access Authorized Route\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/App.js"],"names":["React","useState","useEffect","configureStore","createSlice","initialState","rootReducer","RegisterContainer","LoginContainer","NavBar","App","store","reducer","loginFormSlice","name","loginForm","reducers","toggleLogin","state","action","console","log","user","setUser","token","localStorage","getItem","fetch","headers","Authorization","then","resp","json","data","handleLogin","handleFormSwitch","input","dispatch","handleAuthClick","renderForm","getState","registerForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { configureStore, createSlice } from '@reduxjs/toolkit';\nimport initialState from './state';\nimport { rootReducer } from './reducers/rootReducer';\nimport RegisterContainer from './containers/RegisterContainer';\nimport LoginContainer from './containers/LoginContainer';\nimport NavBar from './containers/NavBar';\n\nconst App = () => {\n\n  const store = configureStore({ reducer: rootReducer });\n\n  const loginFormSlice = createSlice({\n    name: \"loginForm\",\n    initialState: initialState.loginForm,\n    reducers: {\n      toggleLogin: (state, action) => {\n        console.log(state);\n      }\n    }\n  });\n\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\")\n    if(token){\n      fetch(`http://localhost:8080/auto_login`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(resp => resp.json())\n        .then(data => {\n          setUser(data)\n          // console.log(data)\n        })\n    }\n  }, []);\n\n  const handleLogin = (user) => {\n    setUser(user);\n  };\n\n  const handleFormSwitch = (input) => {\n    store.dispatch(loginForm(\"loginForm\"));\n  };\n\n  const handleAuthClick = () => {\n    const token = localStorage.getItem(\"token\")\n    fetch(`http://localhost:8080/user_is_authed`, {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    })\n      .then(resp => resp.json())\n      .then(data => console.log(data));\n  };\n\n  const renderForm = () => {\n    return (\n      store.getState().loginForm ? [<LoginContainer handleLogin={handleLogin}/>] : null,\n      store.getState().registerForm ? [<RegisterContainer handleLogin={handleLogin}/>] : null\n    );\n  };\n\n  return (\n    <div className=\"App\">\n        <NavBar handleFormSwitch={handleFormSwitch}/>\n        {\n          renderForm()\n        }\n        <button onClick={handleAuthClick} className=\"ui button\">Access Authorized Route</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}