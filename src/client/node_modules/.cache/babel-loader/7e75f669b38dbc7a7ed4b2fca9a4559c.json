{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';// A slice is a function from toolkit that combines the functionality\n// of an action and a reducer into one\nvar canvasSlice=createSlice({name:\"canvasSlice\",initialState:{width:\"1000px\",height:\"600px\"},// actions are auto-generated by the creation of the reducers\nreducers:{resizeCanvas:function resizeCanvas(state,action){switch(action.payload){case\"lg\":state.height=\"600px\";state.width=\"1000px\";break;case\"md\":state.height=\"500px\";state.width=\"800px\";break;case\"sm\":state.height=\"400px\";state.width=\"640px\";break;case\"mb\":state.height=\"500px\";state.width=\"300px\";break;}}}});var resizeCanvas=canvasSlice.actions.resizeCanvas;export{resizeCanvas};export default canvasSlice.reducer;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/client/src/reducers/canvasReducer.js"],"names":["createSlice","canvasSlice","name","initialState","width","height","reducers","resizeCanvas","state","action","payload","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA;AACA;AACA,GAAMC,CAAAA,WAAW,CAAGD,WAAW,CAAC,CAC9BE,IAAI,CAAE,aADwB,CAE9BC,YAAY,CAAE,CACZC,KAAK,CAAE,QADK,CAEZC,MAAM,CAAE,OAFI,CAFgB,CAO9B;AACAC,QAAQ,CAAE,CACRC,YADQ,uBACKC,KADL,CACYC,MADZ,CACoB,CAC1B,OAAOA,MAAM,CAACC,OAAd,EACE,IAAK,IAAL,CACEF,KAAK,CAACH,MAAN,CAAe,OAAf,CACAG,KAAK,CAACJ,KAAN,CAAc,QAAd,CACA,MACF,IAAK,IAAL,CACEI,KAAK,CAACH,MAAN,CAAe,OAAf,CACAG,KAAK,CAACJ,KAAN,CAAc,OAAd,CACA,MACF,IAAK,IAAL,CACEI,KAAK,CAACH,MAAN,CAAe,OAAf,CACAG,KAAK,CAACJ,KAAN,CAAc,OAAd,CACA,MACF,IAAK,IAAL,CACEI,KAAK,CAACH,MAAN,CAAe,OAAf,CACAG,KAAK,CAACJ,KAAN,CAAc,OAAd,CACA,MAhBJ,CAkBD,CApBO,CARoB,CAAD,CAA/B,C,GAgCeG,CAAAA,Y,CAAiBN,WAAW,CAACU,O,CAA7BJ,Y,sBACf,cAAeN,CAAAA,WAAW,CAACW,OAA3B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n// A slice is a function from toolkit that combines the functionality\n// of an action and a reducer into one\nconst canvasSlice = createSlice({\n  name: \"canvasSlice\",\n  initialState: {\n    width: \"1000px\",\n    height: \"600px\",\n  },\n\n  // actions are auto-generated by the creation of the reducers\n  reducers: {\n    resizeCanvas(state, action) {\n      switch(action.payload) {\n        case \"lg\":\n          state.height = \"600px\";\n          state.width = \"1000px\";\n          break\n        case \"md\":\n          state.height = \"500px\";\n          state.width = \"800px\";\n          break\n        case \"sm\":\n          state.height = \"400px\";\n          state.width = \"640px\";\n          break\n        case \"mb\":\n          state.height = \"500px\";\n          state.width = \"300px\";\n          break\n      }\n    },\n  }\n});\n\nexport const { resizeCanvas } = canvasSlice.actions;\nexport default canvasSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}