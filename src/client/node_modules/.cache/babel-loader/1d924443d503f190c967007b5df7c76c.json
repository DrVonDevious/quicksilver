{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/***\n * Remove an element from the dom\n *\n * @argument elem The element to be removed\n */\n\nfunction removeElement(elem) {\n  if (elem.prev) elem.prev.next = elem.next;\n  if (elem.next) elem.next.prev = elem.prev;\n\n  if (elem.parent) {\n    var childs = elem.parent.children;\n    childs.splice(childs.lastIndexOf(elem), 1);\n  }\n}\n\nexports.removeElement = removeElement;\n/***\n * Replace an element in the dom\n *\n * @argument elem The element to be replaced\n * @argument replacement The element to be added\n */\n\nfunction replaceElement(elem, replacement) {\n  var prev = replacement.prev = elem.prev;\n\n  if (prev) {\n    prev.next = replacement;\n  }\n\n  var next = replacement.next = elem.next;\n\n  if (next) {\n    next.prev = replacement;\n  }\n\n  var parent = replacement.parent = elem.parent;\n\n  if (parent) {\n    var childs = parent.children;\n    childs[childs.lastIndexOf(elem)] = replacement;\n  }\n}\n\nexports.replaceElement = replaceElement;\n/***\n * Append a child to an element\n *\n * @argument elem The element to append to\n * @argument child The element to be added as a child\n */\n\nfunction appendChild(elem, child) {\n  child.parent = elem;\n\n  if (elem.children.push(child) !== 1) {\n    var sibling = elem.children[elem.children.length - 2];\n    sibling.next = child;\n    child.prev = sibling;\n    child.next = null;\n  }\n}\n\nexports.appendChild = appendChild;\n/***\n * Append an element after another\n *\n * @argument elem The element to append to\n * @argument next The element be added\n */\n\nfunction append(elem, next) {\n  var parent = elem.parent,\n      currNext = elem.next;\n  next.next = currNext;\n  next.prev = elem;\n  elem.next = next;\n  next.parent = parent;\n\n  if (currNext) {\n    currNext.prev = next;\n\n    if (parent) {\n      var childs = parent.children;\n      childs.splice(childs.lastIndexOf(currNext), 0, next);\n    }\n  } else if (parent) {\n    parent.children.push(next);\n  }\n}\n\nexports.append = append;\n/***\n * Prepend an element before another\n *\n * @argument elem The element to append to\n * @argument prev The element be added\n */\n\nfunction prepend(elem, prev) {\n  var parent = elem.parent;\n\n  if (parent) {\n    var childs = parent.children;\n    childs.splice(childs.lastIndexOf(elem), 0, prev);\n  }\n\n  if (elem.prev) {\n    elem.prev.next = prev;\n  }\n\n  prev.parent = parent;\n  prev.prev = elem.prev;\n  prev.next = elem;\n  elem.prev = prev;\n}\n\nexports.prepend = prepend;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/node_modules/html-to-react/node_modules/domutils/lib/manipulation.js"],"names":["Object","defineProperty","exports","value","removeElement","elem","prev","next","parent","childs","children","splice","lastIndexOf","replaceElement","replacement","appendChild","child","push","sibling","length","append","currNext","prepend"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/***\n * Remove an element from the dom\n *\n * @argument elem The element to be removed\n */\nfunction removeElement(elem) {\n    if (elem.prev)\n        elem.prev.next = elem.next;\n    if (elem.next)\n        elem.next.prev = elem.prev;\n    if (elem.parent) {\n        var childs = elem.parent.children;\n        childs.splice(childs.lastIndexOf(elem), 1);\n    }\n}\nexports.removeElement = removeElement;\n/***\n * Replace an element in the dom\n *\n * @argument elem The element to be replaced\n * @argument replacement The element to be added\n */\nfunction replaceElement(elem, replacement) {\n    var prev = (replacement.prev = elem.prev);\n    if (prev) {\n        prev.next = replacement;\n    }\n    var next = (replacement.next = elem.next);\n    if (next) {\n        next.prev = replacement;\n    }\n    var parent = (replacement.parent = elem.parent);\n    if (parent) {\n        var childs = parent.children;\n        childs[childs.lastIndexOf(elem)] = replacement;\n    }\n}\nexports.replaceElement = replaceElement;\n/***\n * Append a child to an element\n *\n * @argument elem The element to append to\n * @argument child The element to be added as a child\n */\nfunction appendChild(elem, child) {\n    child.parent = elem;\n    if (elem.children.push(child) !== 1) {\n        var sibling = elem.children[elem.children.length - 2];\n        sibling.next = child;\n        child.prev = sibling;\n        child.next = null;\n    }\n}\nexports.appendChild = appendChild;\n/***\n * Append an element after another\n *\n * @argument elem The element to append to\n * @argument next The element be added\n */\nfunction append(elem, next) {\n    var parent = elem.parent, currNext = elem.next;\n    next.next = currNext;\n    next.prev = elem;\n    elem.next = next;\n    next.parent = parent;\n    if (currNext) {\n        currNext.prev = next;\n        if (parent) {\n            var childs = parent.children;\n            childs.splice(childs.lastIndexOf(currNext), 0, next);\n        }\n    }\n    else if (parent) {\n        parent.children.push(next);\n    }\n}\nexports.append = append;\n/***\n * Prepend an element before another\n *\n * @argument elem The element to append to\n * @argument prev The element be added\n */\nfunction prepend(elem, prev) {\n    var parent = elem.parent;\n    if (parent) {\n        var childs = parent.children;\n        childs.splice(childs.lastIndexOf(elem), 0, prev);\n    }\n    if (elem.prev) {\n        elem.prev.next = prev;\n    }\n    prev.parent = parent;\n    prev.prev = elem.prev;\n    prev.next = elem;\n    elem.prev = prev;\n}\nexports.prepend = prepend;\n"]},"metadata":{},"sourceType":"script"}