{"ast":null,"code":"var _jsxFileName = \"/Users/william/Dev/quicksilver/src/client/src/containers/CanvasContainer.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { resizeCanvas } from '../reducers/canvasReducer';\nimport '../css/CanvasContainer.css';\n\nconst CanvasContainer = () => {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const generatePageURL = ({\n    html,\n    css,\n    js\n  }) => {\n    const getBlobURL = (code, type) => {\n      const blob = new Blob([code], {\n        type\n      });\n      return URL.createObjectURL(blob);\n    };\n\n    const cssURL = getBlobURL(css, 'text/css');\n    const jsURL = getBlobURL(js, 'text/javascript');\n    const source = `\n      <html>\n        <head>\n          ${css && `<link rel=\"stylesheet\" type=\"text/css\" href=\"${cssURL}\" />`}\n          ${js && `<script src=\"${jsURL}\"></script>`}\n        </head>\n        <body>\n          ${html || ''}\n        </body>\n      </html>\n    `;\n    return getBlobURL(source, 'text/html');\n  };\n\n  const url = generatePageURL({\n    html: state.code.html,\n    css: state.code.css,\n    js: state.code.js\n  });\n  return /*#__PURE__*/React.createElement(\"iframe\", {\n    className: \"main-canvas\",\n    src: url,\n    style: {\n      width: state.canvas.width,\n      height: state.canvas.height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default CanvasContainer;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/containers/CanvasContainer.js"],"names":["React","useSelector","useDispatch","resizeCanvas","CanvasContainer","state","dispatch","generatePageURL","html","css","js","getBlobURL","code","type","blob","Blob","URL","createObjectURL","cssURL","jsURL","source","url","width","canvas","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAO,4BAAP;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAE5B,QAAMC,KAAK,GAAGJ,WAAW,CAACI,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AAEA,QAAMK,eAAe,GAAG,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,GAAD,KAAuB;AAE7C,UAAMC,UAAU,GAAG,CAAEC,IAAF,EAAQC,IAAR,KAAkB;AACnC,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACH,IAAD,CAAT,EAAiB;AAACC,QAAAA;AAAD,OAAjB,CAAb;AACA,aAAOG,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAP;AACD,KAHD;;AAKA,UAAMI,MAAM,GAAGP,UAAU,CAACF,GAAD,EAAM,UAAN,CAAzB;AACA,UAAMU,KAAK,GAAGR,UAAU,CAACD,EAAD,EAAK,iBAAL,CAAxB;AAEA,UAAMU,MAAM,GAAI;;;YAGRX,GAAG,IAAK,gDAA+CS,MAAO,MAAM;YACpER,EAAE,IAAK,gBAAeS,KAAM,aAAa;;;YAGzCX,IAAI,IAAI,EAAG;;;KAPnB;AAYA,WAAOG,UAAU,CAACS,MAAD,EAAS,WAAT,CAAjB;AAED,GAxBD;;AA0BA,QAAMC,GAAG,GAAGd,eAAe,CAAC;AAACC,IAAAA,IAAI,EAAEH,KAAK,CAACO,IAAN,CAAWJ,IAAlB;AAAwBC,IAAAA,GAAG,EAAEJ,KAAK,CAACO,IAAN,CAAWH,GAAxC;AAA6CC,IAAAA,EAAE,EAAEL,KAAK,CAACO,IAAN,CAAWF;AAA5D,GAAD,CAA3B;AAEA,sBACE;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAgC,IAAA,GAAG,EAAEW,GAArC;AAA0C,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAEjB,KAAK,CAACkB,MAAN,CAAaD,KAArB;AAA4BE,MAAAA,MAAM,EAAEnB,KAAK,CAACkB,MAAN,CAAaC;AAAjD,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CApCD;;AAsCA,eAAepB,eAAf","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { resizeCanvas } from '../reducers/canvasReducer';\nimport '../css/CanvasContainer.css';\n\nconst CanvasContainer = () => {\n\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const generatePageURL = ({ html, css, js }) => {\n\n    const getBlobURL = ( code, type ) => {\n      const blob = new Blob([code], {type});\n      return URL.createObjectURL(blob);\n    };\n\n    const cssURL = getBlobURL(css, 'text/css');\n    const jsURL = getBlobURL(js, 'text/javascript');\n\n    const source = `\n      <html>\n        <head>\n          ${css && `<link rel=\"stylesheet\" type=\"text/css\" href=\"${cssURL}\" />`}\n          ${js && `<script src=\"${jsURL}\"></script>`}\n        </head>\n        <body>\n          ${html || ''}\n        </body>\n      </html>\n    `\n\n    return getBlobURL(source, 'text/html');\n\n  };\n\n  const url = generatePageURL({html: state.code.html, css: state.code.css, js: state.code.js});\n\n  return (\n    <iframe className=\"main-canvas\" src={url} style={{width: state.canvas.width, height: state.canvas.height}}/>\n  );\n};\n\nexport default CanvasContainer;\n"]},"metadata":{},"sourceType":"module"}