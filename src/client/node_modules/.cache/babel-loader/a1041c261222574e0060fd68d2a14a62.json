{"ast":null,"code":"var _jsxFileName = \"/Users/william/Dev/quicksilver/src/client/src/components/MenuBar.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport convertHtmlToJSX from 'html-to-jsx';\nimport '../css/MenuBar.css';\nimport { toggleMenu } from '../reducers/menuReducer';\nimport { toggleCode, updateCSS, updateJS, updateHTML } from '../reducers/codeReducer';\nimport { toggleSaveForm } from '../reducers/saveReducer';\nimport { toggleLoad } from '../reducers/loadReducer';\n\nconst MenuBar = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n\n  const clearCode = () => {\n    dispatch(updateJS(\"\"));\n    dispatch(updateCSS(\"\"));\n    dispatch(updateHTML(\"\"));\n  };\n\n  const export_content = `import React from 'react';\\nimport 'CSS_FILE_PATH';\\n\\nexport default const ComponentName = () => {\\n\\treturn (\\n${convertHtmlToJSX(state.code.html).replace(/^/gm, \"\\t\\t\")}\\n\\t)\\n};`;\n\n  const downloadComponent = (data, style) => {\n    var jsx = document.createElement(\"a\");\n    var css = document.createElement(\"a\");\n    jsx.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(data));\n    jsx.setAttribute('download', \"TestComponent.js\");\n    css.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(style));\n    css.setAttribute('download', \"TestCss.css\");\n    jsx.style.display = 'none';\n    css.style.display = 'none';\n    document.body.appendChild(jsx, css);\n    jsx.click();\n    css.click();\n    document.body.removeChild(jsx, css);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    key: \"1\",\n    onClick: () => dispatch(toggleMenu()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Close Menu\"), /*#__PURE__*/React.createElement(\"button\", {\n    key: \"2\",\n    onClick: () => dispatch(toggleCode()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Show Code\"), /*#__PURE__*/React.createElement(\"button\", {\n    key: \"3\",\n    onClick: () => clearCode(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Clear Component\"), /*#__PURE__*/React.createElement(\"button\", {\n    key: \"4\",\n    onClick: () => dispatch(toggleLoad()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Load Component\"), /*#__PURE__*/React.createElement(\"button\", {\n    key: \"5\",\n    onClick: () => downloadComponent(export_content, state.code.css),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Export Component\"), state.user.currentUser ? [/*#__PURE__*/React.createElement(\"button\", {\n    key: \"5\",\n    onClick: () => dispatch(toggleSaveForm()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Save Component\")] : null);\n};\n\nexport default MenuBar;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/components/MenuBar.js"],"names":["React","useDispatch","useSelector","convertHtmlToJSX","toggleMenu","toggleCode","updateCSS","updateJS","updateHTML","toggleSaveForm","toggleLoad","MenuBar","dispatch","state","clearCode","export_content","code","html","replace","downloadComponent","data","style","jsx","document","createElement","css","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","user","currentUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport convertHtmlToJSX from 'html-to-jsx';\n\nimport '../css/MenuBar.css';\n\nimport { toggleMenu } from '../reducers/menuReducer';\nimport { toggleCode, updateCSS, updateJS, updateHTML } from '../reducers/codeReducer';\nimport { toggleSaveForm } from '../reducers/saveReducer';\nimport { toggleLoad } from '../reducers/loadReducer';\n\nconst MenuBar = () => {\n\n  const dispatch = useDispatch();\n\n  const state = useSelector(state => state);\n\n  const clearCode = () => {\n    dispatch(updateJS(\"\"));\n    dispatch(updateCSS(\"\"));\n    dispatch(updateHTML(\"\"));\n  };\n\n  const export_content = `import React from 'react';\\nimport 'CSS_FILE_PATH';\\n\\nexport default const ComponentName = () => {\\n\\treturn (\\n${convertHtmlToJSX(state.code.html).replace(/^/gm, \"\\t\\t\")}\\n\\t)\\n};`;\n\n  const downloadComponent = (data, style) => {\n    var jsx = document.createElement(\"a\");\n    var css = document.createElement(\"a\");\n\n    jsx.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(data));\n    jsx.setAttribute('download', \"TestComponent.js\");\n\n    css.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(style));\n    css.setAttribute('download', \"TestCss.css\");\n\n    jsx.style.display = 'none';\n    css.style.display = 'none';\n\n    document.body.appendChild(jsx, css);\n\n    jsx.click();\n    css.click();\n\n    document.body.removeChild(jsx, css);\n  };\n\n  return (\n    <div className=\"menu-bar\">\n      <button key=\"1\" onClick={() => dispatch(toggleMenu())}>Close Menu</button>\n      <button key=\"2\" onClick={() => dispatch(toggleCode())}>Show Code</button>\n      <button key=\"3\" onClick={() => clearCode()}>Clear Component</button>\n      <button key=\"4\" onClick={() => dispatch(toggleLoad())}>Load Component</button>\n      <button key=\"5\" onClick={() => downloadComponent(export_content, state.code.css)}>Export Component</button>\n      { state.user.currentUser ? [\n        <button key=\"5\" onClick={() => dispatch(toggleSaveForm())}>Save Component</button>\n      ] : null }\n    </div>\n  );\n};\n\nexport default MenuBar;\n"]},"metadata":{},"sourceType":"module"}