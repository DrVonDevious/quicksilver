{"ast":null,"code":"/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;\n(function () {\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n  /** Used as the semantic version number. */\n\n  var VERSION = '3.10.1';\n  /** Used to compose bitmasks for wrapper metadata. */\n\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n  /** Used as default options for `_.trunc`. */\n\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n  /** Used to detect when a function becomes hot. */\n\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n  /** Used as the size to enable large array optimizations. */\n\n  var LARGE_ARRAY_SIZE = 200;\n  /** Used to indicate the type of lazy iteratees. */\n\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n\n  var FUNC_ERROR_TEXT = 'Expected a function';\n  /** Used as the internal argument placeholder. */\n\n  var PLACEHOLDER = '__lodash_placeholder__';\n  /** `Object#toString` result references. */\n\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n  /** Used to match empty string literals in compiled template source. */\n\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n  /** Used to match HTML entities and HTML characters. */\n\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n  /** Used to match template delimiters. */\n\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n  /** Used to match property names within property paths. */\n\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n  /** Used to match backslashes in property paths. */\n\n  var reEscapeChar = /\\\\(\\\\)?/g;\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n  /** Used to match `RegExp` flags from their coerced string values. */\n\n  var reFlags = /\\w*$/;\n  /** Used to detect hexadecimal string values. */\n\n  var reHasHexPrefix = /^0[xX]/;\n  /** Used to detect host constructors (Safari > 5). */\n\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n  /** Used to detect unsigned integer values. */\n\n  var reIsUint = /^\\d+$/;\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n  /** Used to ensure capturing order of template delimiters. */\n\n  var reNoMatch = /($^)/;\n  /** Used to match unescaped characters in compiled string literals. */\n\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n  /** Used to match words to create compound words. */\n\n  var reWords = function () {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }();\n  /** Used to assign default `context` object properties. */\n\n\n  var contextProps = ['Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number', 'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite', 'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'];\n  /** Used to make template sourceURLs easier to identify. */\n\n  var templateCounter = -1;\n  /** Used to identify `toStringTag` values of typed arrays. */\n\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[stringTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[mapTag] = cloneableTags[setTag] = cloneableTags[weakMapTag] = false;\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\n  var deburredLetters = {\n    '\\xc0': 'A',\n    '\\xc1': 'A',\n    '\\xc2': 'A',\n    '\\xc3': 'A',\n    '\\xc4': 'A',\n    '\\xc5': 'A',\n    '\\xe0': 'a',\n    '\\xe1': 'a',\n    '\\xe2': 'a',\n    '\\xe3': 'a',\n    '\\xe4': 'a',\n    '\\xe5': 'a',\n    '\\xc7': 'C',\n    '\\xe7': 'c',\n    '\\xd0': 'D',\n    '\\xf0': 'd',\n    '\\xc8': 'E',\n    '\\xc9': 'E',\n    '\\xca': 'E',\n    '\\xcb': 'E',\n    '\\xe8': 'e',\n    '\\xe9': 'e',\n    '\\xea': 'e',\n    '\\xeb': 'e',\n    '\\xcC': 'I',\n    '\\xcd': 'I',\n    '\\xce': 'I',\n    '\\xcf': 'I',\n    '\\xeC': 'i',\n    '\\xed': 'i',\n    '\\xee': 'i',\n    '\\xef': 'i',\n    '\\xd1': 'N',\n    '\\xf1': 'n',\n    '\\xd2': 'O',\n    '\\xd3': 'O',\n    '\\xd4': 'O',\n    '\\xd5': 'O',\n    '\\xd6': 'O',\n    '\\xd8': 'O',\n    '\\xf2': 'o',\n    '\\xf3': 'o',\n    '\\xf4': 'o',\n    '\\xf5': 'o',\n    '\\xf6': 'o',\n    '\\xf8': 'o',\n    '\\xd9': 'U',\n    '\\xda': 'U',\n    '\\xdb': 'U',\n    '\\xdc': 'U',\n    '\\xf9': 'u',\n    '\\xfa': 'u',\n    '\\xfb': 'u',\n    '\\xfc': 'u',\n    '\\xdd': 'Y',\n    '\\xfd': 'y',\n    '\\xff': 'y',\n    '\\xc6': 'Ae',\n    '\\xe6': 'ae',\n    '\\xde': 'Th',\n    '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n  /** Used to map characters to HTML entities. */\n\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n  /** Used to map HTML entities to characters. */\n\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n  /** Used to determine if values are of the language type `Object`. */\n\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n  /** Used to escape characters for inclusion in compiled regexes. */\n\n  var regexpEscapes = {\n    '0': 'x30',\n    '1': 'x31',\n    '2': 'x32',\n    '3': 'x33',\n    '4': 'x34',\n    '5': 'x35',\n    '6': 'x36',\n    '7': 'x37',\n    '8': 'x38',\n    '9': 'x39',\n    'A': 'x41',\n    'B': 'x42',\n    'C': 'x43',\n    'D': 'x44',\n    'E': 'x45',\n    'F': 'x46',\n    'a': 'x61',\n    'b': 'x62',\n    'c': 'x63',\n    'd': 'x64',\n    'e': 'x65',\n    'f': 'x66',\n    'n': 'x6e',\n    'r': 'x72',\n    't': 'x74',\n    'u': 'x75',\n    'v': 'x76',\n    'x': 'x78'\n  };\n  /** Used to escape characters for inclusion in compiled string literals. */\n\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n  /** Detect free variable `exports`. */\n\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n  /** Detect free variable `module`. */\n\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n  /** Detect free variable `global` from Node.js. */\n\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n  /** Detect free variable `self`. */\n\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n  /** Detect free variable `window`. */\n\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n  /** Detect the popular CommonJS extension `module.exports`. */\n\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n\n  var root = freeGlobal || freeWindow !== (this && this.window) && freeWindow || freeSelf || this;\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if (value > other && !othIsNull || !valIsReflexive || valIsNull && !othIsUndef && othIsReflexive || valIsUndef && othIsReflexive) {\n        return 1;\n      }\n\n      if (value < other && !valIsNull || !othIsReflexive || othIsNull && !valIsUndef && valIsReflexive || othIsUndef && valIsReflexive) {\n        return -1;\n      }\n    }\n\n    return 0;\n  }\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n\n\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while (fromRight ? index-- : ++index < length) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n\n\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n\n\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n\n\n  function baseToString(value) {\n    return value == null ? '' : value + '';\n  }\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n\n\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n\n    return index;\n  }\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n\n\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n\n    return index;\n  }\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n\n\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || object.index - other.index;\n  }\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n\n\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n\n        var order = orders[index];\n        return result * (order === 'asc' || order === true ? 1 : -1);\n      }\n    } // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\n\n    return object.index - other.index;\n  }\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n\n\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n\n\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n\n\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n\n    return '\\\\' + chr;\n  }\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n\n\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n\n\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while (fromRight ? index-- : ++index < length) {\n      var other = array[index];\n\n      if (other !== other) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n\n\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n\n\n  function isSpace(charCode) {\n    return charCode <= 160 && charCode >= 9 && charCode <= 13 || charCode == 32 || charCode == 160 || charCode == 5760 || charCode == 6158 || charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279);\n  }\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n\n\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n\n    return result;\n  }\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n\n\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n\n\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n\n    return index;\n  }\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n\n\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n\n    return index;\n  }\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n\n\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n\n\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n    /** Native constructor references. */\n\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n    /** Used for native method references. */\n\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n    /** Used to resolve the decompiled source of functions. */\n\n    var fnToString = Function.prototype.toString;\n    /** Used to check objects for own properties. */\n\n    var hasOwnProperty = objectProto.hasOwnProperty;\n    /** Used to generate unique IDs. */\n\n    var idCounter = 0;\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n\n    var objToString = objectProto.toString;\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n\n    var oldDash = root._;\n    /** Used to detect if a method is native. */\n\n    var reIsNative = RegExp('^' + fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n    /** Native method references. */\n\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n    /* Native method references for those with the same name as other `lodash` methods. */\n\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n    /** Used as references for `-Infinity` and `Infinity`. */\n\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n    /** Used as references for the maximum length and index of an array. */\n\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n\n    var MAX_SAFE_INTEGER = 9007199254740991;\n    /** Used to store function metadata. */\n\n    var metaMap = WeakMap && new WeakMap();\n    /** Used to lookup unminified function names. */\n\n    var realNames = {};\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n\n      return new LodashWrapper(value);\n    }\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n\n\n    function baseLodash() {} // No operation performed.\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n\n\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n\n\n    var support = lodash.support = {};\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n\n    lodash.templateSettings = {\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n\n\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n\n\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n\n      return result;\n    }\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n\n\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : start - 1,\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || arrLength == length && takeCount == length) {\n        return baseWrapperValue(isRight && isArr ? array.reverse() : array, this.__actions__);\n      }\n\n      var result = [];\n\n      outer: while (length-- && resIndex < takeCount) {\n        index += dir;\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n\n        result[resIndex++] = value;\n      }\n\n      return result;\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n\n\n    function MapCache() {\n      this.__data__ = {};\n    }\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n\n\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n\n\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n\n\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n\n\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n\n      return this;\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n\n\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n      this.data = {\n        'hash': nativeCreate(null),\n        'set': new Set()\n      };\n\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n\n\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = typeof value == 'string' || isObject(value) ? data.set.has(value) : data.hash[value];\n      return result ? 0 : -1;\n    }\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n\n\n    function cachePush(value) {\n      var data = this.data;\n\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n\n\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n\n      return result;\n    }\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n      array || (array = Array(length));\n\n      while (++index < length) {\n        array[index] = source[index];\n      }\n\n      return array;\n    }\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n\n      return array;\n    }\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n\n      return array;\n    }\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n\n\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n\n\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n\n\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n\n\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n\n      return result;\n    }\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n\n      return array;\n    }\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n\n\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n\n      return accumulator;\n    }\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n\n\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n\n      return accumulator;\n    }\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n\n\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n\n\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n\n      return result;\n    }\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n\n\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n\n\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return objectValue === undefined || !hasOwnProperty.call(object, key) ? sourceValue : objectValue;\n    }\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? result !== value : value === value) || value === undefined && !(key in object)) {\n          object[key] = result;\n        }\n      }\n\n      return object;\n    }\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseAssign(object, source) {\n      return source == null ? object : baseCopy(source, keys(source), object);\n    }\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n\n\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while (++index < propsLength) {\n        var key = props[index];\n\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseCopy(source, props, object) {\n      object || (object = {});\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n\n      return object;\n    }\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n\n\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n\n      if (type == 'function') {\n        return thisArg === undefined ? func : bindCallback(func, thisArg, argCount);\n      }\n\n      if (func == null) {\n        return identity;\n      }\n\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n\n      return thisArg === undefined ? property(func) : baseMatchesProperty(func, thisArg);\n    }\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n\n\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n\n      if (result !== undefined) {\n        return result;\n      }\n\n      if (!isObject(value)) {\n        return value;\n      }\n\n      var isArr = isArray(value);\n\n      if (isArr) {\n        result = initCloneArray(value);\n\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || isFunc && !object) {\n          result = initCloneObject(isFunc ? {} : value);\n\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag] ? initCloneByTag(value, tag, isDeep) : object ? value : {};\n        }\n      } // Check for circular references and return its corresponding clone.\n\n\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n      var length = stackA.length;\n\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      } // Add the source value to the stack of traversed objects and associate it with its clone.\n\n\n      stackA.push(value);\n      stackB.push(result); // Recursively populate clone (susceptible to call stack limits).\n\n      (isArr ? arrayEach : baseForOwn)(value, function (subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n\n\n    var baseCreate = function () {\n      function object() {}\n\n      return function (prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object();\n          object.prototype = undefined;\n        }\n\n        return result || {};\n      };\n    }();\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n\n\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      return setTimeout(function () {\n        func.apply(undefined, args);\n      }, wait);\n    }\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n\n\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = isCommon && values.length >= LARGE_ARRAY_SIZE ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n\n      outer: while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n\n          result.push(value);\n        } else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n\n\n    var baseEach = createBaseEach(baseForOwn);\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function (value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n\n\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n      baseEach(collection, function (value, index, collection) {\n        var current = +iteratee(value, index, collection);\n\n        if (comparator(current, computed) || current === exValue && current === result) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n      start = start == null ? 0 : +start || 0;\n\n      if (start < 0) {\n        start = -start > length ? 0 : length + start;\n      }\n\n      end = end === undefined || end > length ? length : +end || 0;\n\n      if (end < 0) {\n        end += length;\n      }\n\n      length = start > end ? 0 : end >>> 0;\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n\n      return array;\n    }\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n\n\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function (value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n\n\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function (value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n\n\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (isObjectLike(value) && isArrayLike(value) && (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    var baseFor = createBaseFor();\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n\n    var baseForRight = createBaseFor(true);\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n\n\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n\n\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n\n      return index && index == length ? object : undefined;\n    }\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n\n\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n\n      if (value == null || other == null || !isObject(value) && !isObjectLike(other)) {\n        return value !== value && other !== other;\n      }\n\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n\n      if (!isSameTag) {\n        return false;\n      } // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n\n\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n      var length = stackA.length;\n\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      } // Add `object` and `other` to the stack of traversed objects.\n\n\n      stackA.push(object);\n      stackB.push(other);\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n      stackA.pop();\n      stackB.pop();\n      return result;\n    }\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n\n\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n\n      object = toObject(object);\n\n      while (index--) {\n        var data = matchData[index];\n\n        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n          return false;\n        }\n      }\n\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n\n\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n      baseEach(collection, function (value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n\n\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n        return function (object) {\n          if (object == null) {\n            return false;\n          }\n\n          return object[key] === value && (value !== undefined || key in toObject(object));\n        };\n      }\n\n      return function (object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n\n\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = path + '';\n      path = toPath(path);\n      return function (object) {\n        if (object == null) {\n          return false;\n        }\n\n        var key = pathKey;\n        object = toObject(object);\n\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\n          if (object == null) {\n            return false;\n          }\n\n          key = last(path);\n          object = toObject(object);\n        }\n\n        return object[key] === srcValue ? srcValue !== undefined || key in object : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n      arrayEach(props || source, function (srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        } else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n\n          if ((result !== undefined || isSrcArr && !(key in object)) && (isCommon || (result === result ? result !== value : value === value))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value) ? value : isArrayLike(value) ? arrayCopy(value) : [];\n        } else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value) ? toPlainObject(value) : isPlainObject(value) ? value : {};\n        } else {\n          isCommon = false;\n        }\n      } // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n\n\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? result !== value : value === value) {\n        object[key] = result;\n      }\n    }\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n\n\n    function baseProperty(key) {\n      return function (object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n\n\n    function basePropertyDeep(path) {\n      var pathKey = path + '';\n      path = toPath(path);\n      return function (object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n\n      while (length--) {\n        var index = indexes[length];\n\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n\n      return array;\n    }\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n\n\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n\n\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function (value, index, collection) {\n        accumulator = initFromCollection ? (initFromCollection = false, value) : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n\n\n    var baseSetData = !metaMap ? identity : function (func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n      start = start == null ? 0 : +start || 0;\n\n      if (start < 0) {\n        start = -start > length ? 0 : length + start;\n      }\n\n      end = end === undefined || end > length ? length : +end || 0;\n\n      if (end < 0) {\n        end += length;\n      }\n\n      length = start > end ? 0 : end - start >>> 0;\n      start >>>= 0;\n      var result = Array(length);\n\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n\n\n    function baseSome(collection, predicate) {\n      var result;\n      baseEach(collection, function (value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n      array.sort(comparer);\n\n      while (length--) {\n        array[length] = array[length].value;\n      }\n\n      return array;\n    }\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n\n\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n      iteratees = arrayMap(iteratees, function (iteratee) {\n        return callback(iteratee);\n      });\n      var result = baseMap(collection, function (value) {\n        var criteria = arrayMap(iteratees, function (iteratee) {\n          return iteratee(value);\n        });\n        return {\n          'criteria': criteria,\n          'index': ++index,\n          'value': value\n        };\n      });\n      return baseSortBy(result, function (object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n\n\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function (value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n\n\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n\n      outer: while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n\n          if (iteratee) {\n            seen.push(computed);\n          }\n\n          result.push(value);\n        } else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n\n          result.push(value);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n\n\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n\n\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n\n      return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);\n    }\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n\n\n    function baseWrapperValue(value, actions) {\n      var result = value;\n\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n\n      return result;\n    }\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n\n\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = low + high >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? computed <= value : computed < value) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n\n        return high;\n      }\n\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n\n\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? computed <= value : computed < value;\n        }\n\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n\n\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n\n      if (thisArg === undefined) {\n        return func;\n      }\n\n      switch (argCount) {\n        case 1:\n          return function (value) {\n            return func.call(thisArg, value);\n          };\n\n        case 3:\n          return function (value, index, collection) {\n            return func.call(thisArg, value, index, collection);\n          };\n\n        case 4:\n          return function (accumulator, value, index, collection) {\n            return func.call(thisArg, accumulator, value, index, collection);\n          };\n\n        case 5:\n          return function (value, other, key, object, source) {\n            return func.call(thisArg, value, other, key, object, source);\n          };\n      }\n\n      return function () {\n        return func.apply(thisArg, arguments);\n      };\n    }\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n\n\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n\n\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n\n      return result;\n    }\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n\n\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n\n      var offset = argsIndex;\n\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n\n      return result;\n    }\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n\n\n    function createAggregator(setter, initializer) {\n      return function (collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function (value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n\n        return result;\n      };\n    }\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n\n\n    function createAssigner(assigner) {\n      return restParam(function (object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= customizer ? 1 : 0;\n        }\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n\n        while (++index < length) {\n          var source = sources[index];\n\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n\n        return object;\n      });\n    }\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n\n\n    function createBaseEach(eachFunc, fromRight) {\n      return function (collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while (fromRight ? index-- : ++index < length) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n\n        return collection;\n      };\n    }\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n\n\n    function createBaseFor(fromRight) {\n      return function (object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while (fromRight ? index-- : ++index < length) {\n          var key = props[index];\n\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n\n        return object;\n      };\n    }\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n\n\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n\n      return wrapper;\n    }\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n\n\n    function createCache(values) {\n      return nativeCreate && Set ? new SetCache(values) : null;\n    }\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n\n\n    function createCompounder(callback) {\n      return function (string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n\n        return result;\n      };\n    }\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n\n\n    function createCtorWrapper(Ctor) {\n      return function () {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n\n        switch (args.length) {\n          case 0:\n            return new Ctor();\n\n          case 1:\n            return new Ctor(args[0]);\n\n          case 2:\n            return new Ctor(args[0], args[1]);\n\n          case 3:\n            return new Ctor(args[0], args[1], args[2]);\n\n          case 4:\n            return new Ctor(args[0], args[1], args[2], args[3]);\n\n          case 5:\n            return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\n          case 6:\n            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\n          case 7:\n            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args); // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n\n\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n\n      return curryFunc;\n    }\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n\n\n    function createDefaults(assigner, customizer) {\n      return restParam(function (args) {\n        var object = args[0];\n\n        if (object == null) {\n          return object;\n        }\n\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n\n\n    function createExtremum(comparator, exValue) {\n      return function (collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n\n\n    function createFind(eachFunc, fromRight) {\n      return function (collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n\n\n    function createFindIndex(fromRight) {\n      return function (array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n\n\n    function createFindKey(objectFunc) {\n      return function (object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n\n\n    function createFlow(fromRight) {\n      return function () {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while (fromRight ? index-- : ++index < length) {\n          var func = funcs[leftIndex++] = arguments[index];\n\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n\n        index = wrapper ? -1 : length;\n\n        while (++index < length) {\n          func = funcs[index];\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n\n        return function () {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n\n          return result;\n        };\n      };\n    }\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n\n\n    function createForEach(arrayFunc, eachFunc) {\n      return function (collection, iteratee, thisArg) {\n        return typeof iteratee == 'function' && thisArg === undefined && isArray(collection) ? arrayFunc(collection, iteratee) : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n\n\n    function createForIn(objectFunc) {\n      return function (object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n\n\n    function createForOwn(objectFunc) {\n      return function (object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n\n        return objectFunc(object, iteratee);\n      };\n    }\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n\n\n    function createObjectMapper(isMapKeys) {\n      return function (object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n        baseForOwn(object, function (value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n\n\n    function createPadDir(fromRight) {\n      return function (string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n\n\n    function createPartial(flag) {\n      var partialFunc = restParam(function (func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n\n\n    function createReduce(arrayFunc, eachFunc) {\n      return function (collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return typeof iteratee == 'function' && thisArg === undefined && isArray(collection) ? arrayFunc(collection, iteratee, accumulator, initFromArray) : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n\n\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n          length -= argsHolders.length;\n\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n            bitmask |= isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG;\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n\n        return fn.apply(thisBinding, args);\n      }\n\n      return wrapper;\n    }\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n\n\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : chars + '';\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n\n\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n\n        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n\n      return wrapper;\n    }\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n\n\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function (number, precision) {\n        precision = precision === undefined ? 0 : +precision || 0;\n\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n\n        return func(number);\n      };\n    }\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n\n\n    function createSortedIndex(retHighest) {\n      return function (array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return iteratee == null && callback === baseCallback ? binaryIndex(array, value, retHighest) : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n\n\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      var length = partials ? partials.length : 0;\n\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n        partials = holders = undefined;\n      }\n\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n\n      newData[9] = arity == null ? isBindKey ? 0 : func.length : nativeMax(arity - length, 0) || 0;\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n\n\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      } // Ignore non-index properties.\n\n\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n\n          return false;\n        } // Recursively compare arrays (susceptible to call stack limits).\n\n\n        if (isLoose) {\n          if (!arraySome(other, function (othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n          })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return object != +object ? other != +other : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == other + '';\n      }\n\n      return false;\n    }\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n\n      var index = objLength;\n\n      while (index--) {\n        var key = objProps[index];\n\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n\n      var skipCtor = isLoose;\n\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose ? objValue : othValue, key) : undefined; // Recursively compare objects (susceptible to call stack limits).\n\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n        if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n\n\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n\n\n    var getData = !metaMap ? noop : function (func) {\n      return metaMap.get(func);\n    };\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n\n\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n\n\n    var getLength = baseProperty('length');\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n\n      return result;\n    }\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n\n\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n\n\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':\n            start += size;\n            break;\n\n          case 'dropRight':\n            end -= size;\n            break;\n\n          case 'take':\n            end = nativeMin(end, start + size);\n            break;\n\n          case 'takeRight':\n            start = nativeMax(start, end - size);\n            break;\n        }\n      }\n\n      return {\n        'start': start,\n        'end': end\n      };\n    }\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n\n\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length); // Add array properties assigned by `RegExp#exec`.\n\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n\n      return result;\n    }\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n\n\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n\n      return new Ctor();\n    }\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n\n\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag:\n        case float64Tag:\n        case int8Tag:\n        case int16Tag:\n        case int32Tag:\n        case uint8Tag:\n        case uint8ClampedTag:\n        case uint16Tag:\n        case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n\n      return result;\n    }\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n\n\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n\n\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n\n\n    function isIndex(value, length) {\n      value = typeof value == 'number' || reIsUint.test(value) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n\n\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n\n      var type = typeof index;\n\n      if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n        var other = object[index];\n        return value === value ? value === other : other !== other;\n      }\n\n      return false;\n    }\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n\n\n    function isKey(value, object) {\n      var type = typeof value;\n\n      if (type == 'string' && reIsPlainProp.test(value) || type == 'number') {\n        return true;\n      }\n\n      if (isArray(value)) {\n        return false;\n      }\n\n      var result = !reIsDeepProp.test(value);\n      return result || object != null && value in toObject(object);\n    }\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n\n\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n\n      var other = lodash[funcName];\n\n      if (func === other) {\n        return true;\n      }\n\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n\n\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n\n\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n\n\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n      var isCombo = srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG || srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8] || srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG; // Exit early if metadata can't be merged.\n\n      if (!(isCommon || isCombo)) {\n        return data;\n      } // Use source `thisArg` if available.\n\n\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2]; // Set when currying a bound function.\n\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      } // Compose partial arguments.\n\n\n      var value = source[3];\n\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      } // Compose partial right arguments.\n\n\n      value = source[5];\n\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      } // Use source `argPos` if available.\n\n\n      value = source[7];\n\n      if (value) {\n        data[7] = arrayCopy(value);\n      } // Use source `ary` if it's smaller.\n\n\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      } // Use source `arity` if one is not provided.\n\n\n      if (data[9] == null) {\n        data[9] = source[9];\n      } // Use source `func` and merge bitmasks.\n\n\n      data[0] = source[0];\n      data[1] = newBitmask;\n      return data;\n    }\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n\n\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n\n\n    function pickByArray(object, props) {\n      object = toObject(object);\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n\n      return result;\n    }\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n\n\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function (value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n\n      return array;\n    }\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n\n\n    var setData = function () {\n      var count = 0,\n          lastCalled = 0;\n      return function (key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n        lastCalled = stamp;\n\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n\n        return baseSetData(key, value);\n      };\n    }();\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n\n\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n      var allowIndexes = !!length && isLength(length) && (isArray(object) || isArguments(object));\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n\n        if (allowIndexes && isIndex(key, length) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n\n\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n\n      return isObject(value) ? value : Object(value);\n    }\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n\n\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n\n\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n\n      var result = [];\n      baseToString(value).replace(rePropName, function (match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);\n      });\n      return result;\n    }\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n\n\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper ? wrapper.clone() : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n\n\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, index += size);\n      }\n\n      return result;\n    }\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n\n\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n\n\n    var difference = restParam(function (array, values) {\n      return isObjectLike(array) && isArrayLike(array) ? baseDifference(array, baseFlatten(values, false, true)) : [];\n    });\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n\n\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n\n\n    function dropRightWhile(array, predicate, thisArg) {\n      return array && array.length ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true) : [];\n    }\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n\n\n    function dropWhile(array, predicate, thisArg) {\n      return array && array.length ? baseWhile(array, getCallback(predicate, thisArg, 3), true) : [];\n    }\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n\n\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n\n      return baseFill(array, value, start, end);\n    }\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n\n\n    var findIndex = createFindIndex();\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n\n    var findLastIndex = createFindIndex(true);\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n\n\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n\n\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n\n\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return -1;\n      }\n\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n\n        if (index < length && (value === value ? value === array[index] : array[index] !== array[index])) {\n          return index;\n        }\n\n        return -1;\n      }\n\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n\n\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n\n\n    var intersection = restParam(function (arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = isCommon && value.length >= 120 ? createCache(othIndex && value) : null;\n      }\n\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer: while (++index < length) {\n        value = array[index];\n\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n\n          while (--othIndex) {\n            var cache = caches[othIndex];\n\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n\n          if (seen) {\n            seen.push(value);\n          }\n\n          result.push(value);\n        }\n      }\n\n      return result;\n    });\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n\n\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return -1;\n      }\n\n      var index = length;\n\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n\n        if (value === value ? value === other : other !== other) {\n          return index;\n        }\n\n        return -1;\n      }\n\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n\n      return -1;\n    }\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n\n\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n\n      return array;\n    }\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n\n\n    var pullAt = restParam(function (array, indexes) {\n      indexes = baseFlatten(indexes);\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n\n    function remove(array, predicate, thisArg) {\n      var result = [];\n\n      if (!(array && array.length)) {\n        return result;\n      }\n\n      var index = -1,\n          indexes = [],\n          length = array.length;\n      predicate = getCallback(predicate, thisArg, 3);\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n\n      basePullAt(array, indexes);\n      return result;\n    }\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n\n\n    function rest(array) {\n      return drop(array, 1);\n    }\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n\n\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n\n      return baseSlice(array, start, end);\n    }\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n\n\n    var sortedIndex = createSortedIndex();\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n\n    var sortedLastIndex = createSortedIndex(true);\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n\n\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n\n\n    function takeRightWhile(array, predicate, thisArg) {\n      return array && array.length ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true) : [];\n    }\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n\n\n    function takeWhile(array, predicate, thisArg) {\n      return array && array.length ? baseWhile(array, getCallback(predicate, thisArg, 3)) : [];\n    }\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n\n\n    var union = restParam(function (arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n\n      var callback = getCallback();\n\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n\n      return isSorted && getIndexOf() == baseIndexOf ? sortedUniq(array, iteratee) : baseUniq(array, iteratee);\n    }\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n\n\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n\n      var index = -1,\n          length = 0;\n      array = arrayFilter(array, function (group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n\n      return result;\n    }\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n\n\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      var result = unzip(array);\n\n      if (iteratee == null) {\n        return result;\n      }\n\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function (group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n\n\n    var without = restParam(function (array, values) {\n      return isArrayLike(array) ? baseDifference(array, values) : [];\n    });\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n\n        if (isArrayLike(array)) {\n          var result = result ? arrayPush(baseDifference(result, array), baseDifference(array, result)) : array;\n        }\n      }\n\n      return result ? baseUniq(result) : [];\n    }\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n\n\n    var zip = restParam(unzip);\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n\n      while (++index < length) {\n        var key = props[index];\n\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n\n      return result;\n    }\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n\n\n    var zipWith = restParam(function (arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = length > 1 && typeof thisArg == 'function' ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n\n\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n\n\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n\n\n    function wrapperChain() {\n      return chain(this);\n    }\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n\n\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n\n\n    var wrapperConcat = restParam(function (values) {\n      values = baseFlatten(values);\n      return this.thru(function (array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n\n      previous.__wrapped__ = value;\n      return result;\n    }\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n\n\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function (value) {\n        return wrapped && wrapped.__dir__ < 0 ? value : value.reverse();\n      };\n\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n\n        wrapped = wrapped.reverse();\n\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [interceptor],\n          'thisArg': undefined\n        });\n\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n\n      return this.thru(interceptor);\n    }\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n\n\n    function wrapperToString() {\n      return this.value() + '';\n    }\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n\n\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n\n\n    var at = restParam(function (collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n\n    var countBy = createAggregator(function (result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : result[key] = 1;\n    });\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n\n      return func(collection, predicate);\n    }\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n\n\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n\n\n    var find = createFind(baseEach);\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n\n    var findLast = createFind(baseEachRight, true);\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n\n\n    var forEach = createForEach(arrayEach, baseEach);\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n\n    var groupBy = createAggregator(function (result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n\n      if (typeof fromIndex != 'number' || guard && isIterateeCall(target, fromIndex, guard)) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex || 0;\n      }\n\n      return typeof collection == 'string' || !isArray(collection) && isString(collection) ? fromIndex <= length && collection.indexOf(target, fromIndex) > -1 : !!length && getIndexOf(collection, target, fromIndex) > -1;\n    }\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n\n\n    var indexBy = createAggregator(function (result, value, key) {\n      result[key] = value;\n    });\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n\n    var invoke = restParam(function (collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n      baseEach(collection, function (value) {\n        var func = isFunc ? path : isProp && value != null ? value[path] : undefined;\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n\n\n    var partition = createAggregator(function (result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function () {\n      return [[], []];\n    });\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n\n\n    var reduce = createReduce(arrayReduce, baseEach);\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function (value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n\n\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n      n = nativeMin(n < 0 ? 0 : +n || 0, length);\n\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n        result[rand] = result[index];\n        result[index] = value;\n      }\n\n      result.length = n;\n      return result;\n    }\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n\n\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n\n\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n\n\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n\n      return func(collection, predicate);\n    }\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n\n\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      var result = baseMap(collection, function (value, key, collection) {\n        return {\n          'criteria': iteratee(value, key, collection),\n          'index': ++index,\n          'value': value\n        };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n\n\n    var sortByAll = restParam(function (collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n\n      var guard = iteratees[2];\n\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n\n\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n\n\n    var now = nativeNow || function () {\n      return new Date().getTime();\n    };\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n\n\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function () {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n\n\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n\n      n = func && n == null ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n\n\n    function before(n, func) {\n      var result;\n\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n\n      return function () {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n\n        if (n <= 1) {\n          func = undefined;\n        }\n\n        return result;\n      };\n    }\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n\n\n    var bind = restParam(function (func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n\n    var bindAll = restParam(function (object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n\n      return object;\n    });\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n\n    var bindKey = restParam(function (object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n\n    var curry = createCurry(CURRY_FLAG);\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      wait = wait < 0 ? 0 : +wait || 0;\n\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          } else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        } else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n\n        return result;\n      }\n\n      debounced.cancel = cancel;\n      return debounced;\n    }\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n\n\n    var defer = restParam(function (func, args) {\n      return baseDelay(func, 1, args);\n    });\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n\n    var delay = restParam(function (func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n\n    var flow = createFlow();\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n\n    var flowRight = createFlow(true);\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || resolver && typeof resolver != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      var memoized = function () {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n\n      memoized.cache = new memoize.Cache();\n      return memoized;\n    }\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n\n\n    var modArgs = restParam(function (func, transforms) {\n      transforms = baseFlatten(transforms);\n\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      var length = transforms.length;\n      return restParam(function (args) {\n        var index = nativeMin(args.length, length);\n\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n\n        return func.apply(this, args);\n      });\n    });\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      return function () {\n        return !predicate.apply(this, arguments);\n      };\n    }\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n\n\n    function once(func) {\n      return before(2, func);\n    }\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n\n\n    var partial = createPartial(PARTIAL_FLAG);\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n\n    var rearg = restParam(function (func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      start = nativeMax(start === undefined ? func.length - 1 : +start || 0, 0);\n      return function () {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n\n        switch (start) {\n          case 0:\n            return func.call(this, rest);\n\n          case 1:\n            return func.call(this, args[0], rest);\n\n          case 2:\n            return func.call(this, args[0], args[1], rest);\n        }\n\n        var otherArgs = Array(start + 1);\n        index = -1;\n\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n\n\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      return function (array) {\n        return func.apply(this, array);\n      };\n    }\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n\n\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': +wait,\n        'trailing': trailing\n      });\n    }\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n\n\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n\n\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      } else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n\n      return typeof customizer == 'function' ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1)) : baseClone(value, isDeep);\n    }\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n\n\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function' ? baseClone(value, true, bindCallback(customizer, thisArg, 1)) : baseClone(value, true);\n    }\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n\n\n    function gt(value, other) {\n      return value > other;\n    }\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n\n\n    function gte(value, other) {\n      return value >= other;\n    }\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n\n\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n\n\n    var isArray = nativeIsArray || function (value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n\n\n    function isBoolean(value) {\n      return value === true || value === false || isObjectLike(value) && objToString.call(value) == boolTag;\n    }\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n\n\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n\n\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n\n\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) || isObjectLike(value) && isFunction(value.splice))) {\n        return !value.length;\n      }\n\n      return !keys(value).length;\n    }\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n\n\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n\n\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n\n\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n\n\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n\n\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n\n\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n\n\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n\n\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n\n\n    function isNull(value) {\n      return value === null;\n    }\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n\n\n    function isNumber(value) {\n      return typeof value == 'number' || isObjectLike(value) && objToString.call(value) == numberTag;\n    }\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n\n\n    function isPlainObject(value) {\n      var Ctor; // Exit early for non `Object` objects.\n\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) || !hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor))) {\n        return false;\n      } // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n\n\n      var result; // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n\n      baseForIn(value, function (subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n\n\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n\n\n    function isString(value) {\n      return typeof value == 'string' || isObjectLike(value) && objToString.call(value) == stringTag;\n    }\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n\n\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n\n\n    function isUndefined(value) {\n      return value === undefined;\n    }\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n\n\n    function lt(value, other) {\n      return value < other;\n    }\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n\n\n    function lte(value, other) {\n      return value <= other;\n    }\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n\n\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n\n      if (!isLength(length)) {\n        return values(value);\n      }\n\n      if (!length) {\n        return [];\n      }\n\n      return arrayCopy(value);\n    }\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n\n\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n\n\n    var merge = createAssigner(baseMerge);\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n\n    var assign = createAssigner(function (object, source, customizer) {\n      return customizer ? assignWith(object, source, customizer) : baseAssign(object, source);\n    });\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n\n      return properties ? baseAssign(result, properties) : result;\n    }\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n\n\n    var defaults = createDefaults(assign, assignDefaults);\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n\n    var findKey = createFindKey(baseForOwn);\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n\n    var findLastKey = createFindKey(baseForOwnRight);\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n\n    var forIn = createForIn(baseFor);\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n\n    var forInRight = createForIn(baseForRight);\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n\n    var forOwn = createForOwn(baseForOwn);\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n\n    var forOwnRight = createForOwn(baseForOwnRight);\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n\n\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n\n\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n\n      var result = hasOwnProperty.call(object, path);\n\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\n        if (object == null) {\n          return false;\n        }\n\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n\n      return result || isLength(object.length) && isIndex(path, object.length) && (isArray(object) || isArguments(object));\n    }\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n\n\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        } else {\n          result[value] = key;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n\n\n    var keys = !nativeKeys ? shimKeys : function (object) {\n      var Ctor = object == null ? undefined : object.constructor;\n\n      if (typeof Ctor == 'function' && Ctor.prototype === object || typeof object != 'function' && isArrayLike(object)) {\n        return shimKeys(object);\n      }\n\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n\n      var length = object.length;\n      length = length && isLength(length) && (isArray(object) || isArguments(object)) && length || 0;\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = index + '';\n      }\n\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) && !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n\n\n    var mapKeys = createObjectMapper(true);\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n\n    var mapValues = createObjectMapper();\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n\n    var omit = restParam(function (object, props) {\n      if (object == null) {\n        return {};\n      }\n\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function (value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n\n    function pairs(object) {\n      object = toObject(object);\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n\n      return result;\n    }\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n\n\n    var pick = restParam(function (object, props) {\n      if (object == null) {\n        return {};\n      }\n\n      return typeof props[0] == 'function' ? pickByCallback(object, bindCallback(props[0], props[1], 3)) : pickByArray(object, baseFlatten(props));\n    });\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n\n        result = result === undefined ? defaultValue : result;\n      }\n\n      return isFunction(result) ? result.call(object) : result;\n    }\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n\n\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n\n      var pathKey = path + '';\n      path = object[pathKey] != null || isKey(path, object) ? [pathKey] : toPath(path);\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n\n        nested = nested[key];\n      }\n\n      return object;\n    }\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n\n\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor() : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n\n      (isArr ? arrayEach : baseForOwn)(object, function (value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n\n\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n\n\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n\n\n    function inRange(value, start, end) {\n      start = +start || 0;\n\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n\n\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        } else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n\n      min = +min || 0;\n\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1))), max);\n      }\n\n      return baseRandom(min, max);\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n\n\n    var camelCase = createCompounder(function (result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? word.charAt(0).toUpperCase() + word.slice(1) : word);\n    });\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n\n\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n\n\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = target + '';\n      var length = string.length;\n      position = position === undefined ? length : nativeMin(position < 0 ? 0 : +position || 0, length);\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n\n\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;\n    }\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n\n\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return string && reHasRegExpChars.test(string) ? string.replace(reRegExpChars, escapeRegExpChar) : string || '(?:)';\n    }\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n\n\n    var kebabCase = createCompounder(function (result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n      var strLength = string.length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n\n\n    var padLeft = createPadDir();\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n\n    var padRight = createPadDir(true);\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n\n\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      } // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\n\n      do {\n        if (n % 2) {\n          result += string;\n        }\n\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n\n\n    var snakeCase = createCompounder(function (result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n\n    var startCase = createCompounder(function (result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null ? 0 : nativeMin(position < 0 ? 0 : +position || 0, string.length);\n      return string.lastIndexOf(target, position) == position;\n    }\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n\n\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\"; // Compile the regexp to match each delimiter.\n\n      var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g'); // Use a sourceURL for easier debugging.\n\n      var sourceURL = '//# sourceURL=' + ('sourceURL' in options ? options.sourceURL : 'lodash.templateSources[' + ++templateCounter + ']') + '\\n';\n      string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue); // Escape characters that can't be included in string literals.\n\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar); // Replace delimiters with snippets.\n\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n\n        index = offset + match.length; // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n\n        return match;\n      });\n      source += \"';\\n\"; // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n\n      var variable = options.variable;\n\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      } // Cleanup code by stripping empty strings.\n\n\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;'); // Frame code as the function body.\n\n      source = 'function(' + (variable || 'obj') + ') {\\n' + (variable ? '' : 'obj || (obj = {});\\n') + \"var __t, __p = ''\" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ', __j = Array.prototype.join;\\n' + \"function print() { __p += __j.call(arguments, '') }\\n\" : ';\\n') + source + 'return __p\\n}';\n      var result = attempt(function () {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      }); // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n\n      result.source = source;\n\n      if (isError(result)) {\n        throw result;\n      }\n\n      return result;\n    }\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n\n\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n\n      if (!string) {\n        return string;\n      }\n\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n\n      chars = chars + '';\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n\n\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n\n      if (!string) {\n        return string;\n      }\n\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n\n      return string.slice(charsLeftIndex(string, chars + ''));\n    }\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n\n\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n\n      if (!string) {\n        return string;\n      }\n\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n\n      return string.slice(0, charsRightIndex(string, chars + '') + 1);\n    }\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n\n\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? +options.length || 0 : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n\n      string = baseToString(string);\n\n      if (length >= string.length) {\n        return string;\n      }\n\n      var end = length - omission.length;\n\n      if (end < 1) {\n        return omission;\n      }\n\n      var result = string.slice(0, end);\n\n      if (separator == null) {\n        return result + omission;\n      }\n\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n\n          separator.lastIndex = 0;\n\n          while (match = separator.exec(substring)) {\n            newEnd = match.index;\n          }\n\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n\n      return result + omission;\n    }\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n\n\n    function unescape(string) {\n      string = baseToString(string);\n      return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;\n    }\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n\n\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n\n\n    var attempt = restParam(function (func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n\n      return isObjectLike(func) ? matches(func) : baseCallback(func, thisArg);\n    }\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n\n\n    function constant(value) {\n      return function () {\n        return value;\n      };\n    }\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n\n\n    function identity(value) {\n      return value;\n    }\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n\n\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n\n\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n\n\n    var method = restParam(function (path, args) {\n      return function (object) {\n        return invokePath(object, path, args);\n      };\n    });\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n\n    var methodOf = restParam(function (object, args) {\n      return function (path) {\n        return invokePath(object, path, args);\n      };\n    });\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = props && props.length ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n        object[methodName] = func;\n\n        if (isFunc) {\n          object.prototype[methodName] = function (func) {\n            return function () {\n              var chainAll = this.__chain__;\n\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n                actions.push({\n                  'func': func,\n                  'args': arguments,\n                  'thisArg': object\n                });\n                result.__chain__ = chainAll;\n                return result;\n              }\n\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func);\n        }\n      }\n\n      return object;\n    }\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n\n\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n\n\n    function noop() {} // No operation performed.\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n\n\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n\n\n    function propertyOf(object) {\n      return function (path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n\n\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n\n      start = +start || 0;\n      step = step == null ? 1 : +step || 0;\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      } // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n\n\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n\n      return result;\n    }\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n\n\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n); // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n      iteratee = bindCallback(iteratee, thisArg, 1);\n\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n\n\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n\n\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n\n\n    var ceil = createRound('ceil');\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n\n    var floor = createRound('floor');\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n\n    var round = createRound('round');\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1 ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee) : baseSum(collection, iteratee);\n    }\n    /*------------------------------------------------------------------------*/\n    // Ensure wrappers are instances of `baseLodash`.\n\n\n    lodash.prototype = baseLodash.prototype;\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper; // Add functions to the `Map` cache.\n\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet; // Add functions to the `Set` cache.\n\n    SetCache.prototype.push = cachePush; // Assign cache to `_.memoize`.\n\n    memoize.Cache = MapCache; // Add functions that return wrapped values when chaining.\n\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith; // Add aliases.\n\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq; // Add functions to `lodash.prototype`.\n\n    mixin(lodash, lodash);\n    /*------------------------------------------------------------------------*/\n    // Add functions that return unwrapped values when chaining.\n\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words; // Add aliases.\n\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n    mixin(lodash, function () {\n      var source = {};\n      baseForOwn(lodash, function (func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }(), false);\n    /*------------------------------------------------------------------------*/\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function (n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n\n      return this.thru(function (value) {\n        return sample(value, n);\n      });\n    };\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n\n\n    lodash.VERSION = VERSION; // Assign default placeholders.\n\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (methodName) {\n      lodash[methodName].placeholder = lodash;\n    }); // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\n    arrayEach(['drop', 'take'], function (methodName, index) {\n      LazyWrapper.prototype[methodName] = function (n) {\n        var filtered = this.__filtered__;\n\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n        var result = this.clone();\n\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({\n            'size': n,\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function (n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    }); // Add `LazyWrapper` methods that accept an `iteratee` value.\n\n    arrayEach(['filter', 'map', 'takeWhile'], function (methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function (iteratee, thisArg) {\n        var result = this.clone();\n\n        result.__iteratees__.push({\n          'iteratee': getCallback(iteratee, thisArg, 1),\n          'type': type\n        });\n\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    }); // Add `LazyWrapper` methods for `_.first` and `_.last`.\n\n    arrayEach(['first', 'last'], function (methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function () {\n        return this[takeName](1).value()[0];\n      };\n    }); // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n\n    arrayEach(['initial', 'rest'], function (methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function () {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    }); // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n\n    arrayEach(['pluck', 'where'], function (methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function (value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function () {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function (predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function (value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function (start, end) {\n      start = start == null ? 0 : +start || 0;\n      var result = this;\n\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n\n      if (end !== undefined) {\n        end = +end || 0;\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function (predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function () {\n      return this.take(POSITIVE_INFINITY);\n    }; // Add `LazyWrapper` methods to `lodash.prototype`.\n\n\n    baseForOwn(LazyWrapper.prototype, function (func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? 'take' + (methodName == 'last' ? 'Right' : '') : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n\n      lodash.prototype[methodName] = function () {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n\n        var interceptor = function (value) {\n          return retUnwrapped && chainAll ? lodashFunc(value, 1)[0] : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = {\n          'func': thru,\n          'args': [interceptor],\n          'thisArg': undefined\n        },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n\n            value.__actions__.push(action);\n\n            return func.call(value);\n          }\n\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n\n          result.__actions__.push(action);\n\n          return new LodashWrapper(result, chainAll);\n        }\n\n        return this.thru(interceptor);\n      };\n    }); // Add `Array` and `String` methods to `lodash.prototype`.\n\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function (methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function () {\n        var args = arguments;\n\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n\n        return this[chainName](function (value) {\n          return func.apply(value, args);\n        });\n      };\n    }); // Map minified function names to their real names.\n\n    baseForOwn(LazyWrapper.prototype, function (func, methodName) {\n      var lodashFunc = lodash[methodName];\n\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n        names.push({\n          'name': methodName,\n          'func': lodashFunc\n        });\n      }\n    });\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }]; // Add functions to the lazy wrapper.\n\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue; // Add chaining functions to the `lodash` wrapper.\n\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue; // Add function aliases to the `lodash` wrapper.\n\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n    return lodash;\n  }\n  /*--------------------------------------------------------------------------*/\n  // Export lodash.\n\n\n  var _ = runInContext(); // Some AMD build optimizers like r.js check for condition patterns like the following:\n\n\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _; // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n\n    define(function () {\n      return _;\n    });\n  } // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n      // Export for Node.js or RingoJS.\n      if (moduleExports) {\n        (freeModule.exports = _)._ = _;\n      } // Export for Rhino with CommonJS support.\n      else {\n          freeExports._ = _;\n        }\n    } else {\n      // Export for a browser or Rhino.\n      root._ = _;\n    }\n}).call(this);","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/node_modules/cheerio/node_modules/lodash/index.js"],"names":["undefined","VERSION","BIND_FLAG","BIND_KEY_FLAG","CURRY_BOUND_FLAG","CURRY_FLAG","CURRY_RIGHT_FLAG","PARTIAL_FLAG","PARTIAL_RIGHT_FLAG","ARY_FLAG","REARG_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LARGE_ARRAY_SIZE","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","FUNC_ERROR_TEXT","PLACEHOLDER","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChars","reHasRegExpChars","reComboMark","reEscapeChar","reEsTemplate","reFlags","reHasHexPrefix","reIsHostCtor","reIsUint","reLatin1","reNoMatch","reUnescapedString","reWords","upper","lower","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","htmlEscapes","htmlUnescapes","objectTypes","regexpEscapes","stringEscapes","freeExports","exports","nodeType","freeModule","module","freeGlobal","global","Object","freeSelf","self","freeWindow","window","moduleExports","root","baseCompareAscending","value","other","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","length","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","indexOf","charAt","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","result","order","deburrLetter","letter","escapeHtmlChar","chr","escapeRegExpChar","leadingChar","whitespaceChar","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","runInContext","context","_","defaults","pick","Array","Date","Error","Function","Math","Number","String","TypeError","arrayProto","prototype","objectProto","stringProto","fnToString","toString","hasOwnProperty","idCounter","objToString","oldDash","reIsNative","call","replace","ArrayBuffer","clearTimeout","parseFloat","pow","propertyIsEnumerable","Set","getNative","setTimeout","splice","Uint8Array","WeakMap","nativeCeil","ceil","nativeCreate","nativeFloor","floor","nativeIsArray","nativeIsFinite","isFinite","nativeKeys","nativeMax","max","nativeMin","min","nativeNow","nativeParseInt","parseInt","nativeRandom","random","NEGATIVE_INFINITY","POSITIVE_INFINITY","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","MAX_SAFE_INTEGER","metaMap","realNames","lodash","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","actions","__wrapped__","__actions__","__chain__","support","templateSettings","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","arrayCopy","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","baseWrapperValue","reverse","outer","iterIndex","data","type","MapCache","__data__","mapDelete","key","has","mapGet","mapHas","mapSet","SetCache","values","push","cacheIndexOf","cache","isObject","set","hash","cachePush","add","arrayConcat","othIndex","othLength","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","keys","baseAssign","baseCopy","baseAt","collection","isNil","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","isFunc","initCloneObject","initCloneByTag","baseForOwn","subValue","baseCreate","baseDelay","wait","args","apply","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEach","createBaseEach","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseFor","createBaseFor","baseForRight","baseForIn","keysIn","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","baseRandom","baseReduce","initFromCollection","baseSetData","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","low","high","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","arguments","bufferClone","buffer","byteLength","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","getLength","isLength","iterable","keysFunc","createBindWrapper","Ctor","createCtorWrapper","wrapper","fn","createCompounder","words","deburr","thisBinding","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isAry","isBind","isBindKey","isCurry","isCurryBound","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","newData","setData","reorder","strLength","padLength","repeat","slice","createPartialWrapper","createRound","methodName","number","precision","createSortedIndex","mergeData","arrValue","othValue","name","message","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","noop","get","otherFunc","target","pairs","isNative","transforms","size","input","byteOffset","exec","lastIndex","invokePath","test","srcBitmask","newBitmask","isCombo","mergeDefaults","merge","pickByArray","pickByCallback","oldArray","count","lastCalled","stamp","now","remaining","shimKeys","allowIndexes","match","quote","chunk","compact","difference","drop","n","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","first","flatten","flattenDeep","initial","intersection","arrays","caches","lastIndexOf","pull","pullAt","remove","rest","sortedIndex","sortedLastIndex","take","takeRight","takeRightWhile","takeWhile","union","uniq","isSorted","unzip","group","unzipWith","without","xor","zip","zipObject","zipWith","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperConcat","wrapperPlant","parent","wrapperReverse","wrapped","wrapperToString","wrapperValue","at","countBy","every","filter","find","findLast","findWhere","forEach","forEachRight","groupBy","includes","isString","indexBy","invoke","isProp","map","partition","pluck","reduce","reduceRight","reject","sample","toArray","rand","shuffle","some","sortBy","sortByAll","sortByOrder","where","getTime","after","temp","before","bind","bindAll","methodNames","functions","bindKey","curry","curryRight","debounce","options","maxTimeoutId","timeoutId","trailingCall","maxWait","trailing","leading","cancel","complete","isCalled","id","delayed","maxDelayed","debounced","leadingCall","defer","delay","flow","flowRight","memoize","resolver","memoized","Cache","modArgs","negate","once","partial","partialRight","rearg","otherArgs","spread","throttle","wrap","cloneDeep","gt","gte","isBoolean","isDate","isElement","isEmpty","isEqual","isError","isMatch","isNaN","isNumber","isNull","isRegExp","isUndefined","lt","lte","assign","create","properties","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","defaultValue","invert","multiValue","isProto","skipIndexes","mapKeys","mapValues","omit","nested","transform","valuesIn","inRange","floating","noMin","noMax","camelCase","word","toLowerCase","toUpperCase","capitalize","endsWith","position","escape","escapeRegExp","kebabCase","pad","padLeft","padRight","radix","trim","snakeCase","startCase","startsWith","template","otherOptions","settings","imports","importsKeys","importsValues","isEscaping","isEvaluating","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","trimLeft","trimRight","trunc","omission","separator","search","newEnd","substring","unescape","pattern","e","matches","constant","matchesProperty","method","methodOf","mixin","isObj","noConflict","propertyOf","range","step","times","uniqueId","prefix","augend","addend","round","sum","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","eq","detect","foldl","foldr","head","include","inject","filtered","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","concat","run","toJSON","valueOf","define","amd"],"mappings":"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","sourcesContent":["/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n"]},"metadata":{},"sourceType":"script"}