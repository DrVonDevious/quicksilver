{"ast":null,"code":"import { createSlice, createAction } from '@reduxjs/toolkit';\nconst userSlice = createSlice({\n  name: \"userSlice\",\n  initialState: {\n    currentUser: null,\n    users: []\n  },\n  reducers: {\n    setUsers(state, action) {\n      state.users = action.payload;\n    },\n\n    setUser(state, action) {\n      const postLogin = async () => {\n        const response = await fetch(\"http://localhost:8080/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: action.payload.username,\n            password: action.payload.password\n          })\n        });\n        const json = await response.json(); //   .then(res => res.json())\n        //   .then(data => {\n\n        localStorage.username = data.user.username;\n        localStorage.password = data.user.password;\n        localStorage.token = data.jwt;\n\n        if (data.jwt) {\n          console.log(`Welcome back ${data.user.username}!`);\n          state.currentUser = data.user;\n        } else {\n          console.log(\"Invalid Login\");\n        }\n\n        ;\n      };\n\n      postLogin(); //   })\n    }\n\n  }\n});\nexport const {\n  setUser,\n  setUsers\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/src/client/src/reducers/userReducer.js"],"names":["createSlice","createAction","userSlice","name","initialState","currentUser","users","reducers","setUsers","state","action","payload","setUser","postLogin","response","fetch","method","headers","body","JSON","stringify","username","password","json","localStorage","data","user","token","jwt","console","log","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,QAA0C,kBAA1C;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,WADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE,IADD;AAEZC,IAAAA,KAAK,EAAE;AAFK,GAFc;AAM5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAAED,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAArB;AAA8B,KADhD;;AAERC,IAAAA,OAAO,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACrB,YAAMG,SAAS,GAAG,YAAY;AAC9B,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AAC1DC,UAAAA,MAAM,EAAE,MADkD;AAE1DC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT,WAFiD;AAK1DC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,YAAAA,QAAQ,EAAEX,MAAM,CAACC,OAAP,CAAeU,QADN;AAEnBC,YAAAA,QAAQ,EAAEZ,MAAM,CAACC,OAAP,CAAeW;AAFN,WAAf;AALoD,SAAhC,CAA5B;AAUA,cAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACS,IAAT,EAAnB,CAX8B,CAY9B;AACA;;AACIC,QAAAA,YAAY,CAACH,QAAb,GAAwBI,IAAI,CAACC,IAAL,CAAUL,QAAlC;AACAG,QAAAA,YAAY,CAACF,QAAb,GAAwBG,IAAI,CAACC,IAAL,CAAUJ,QAAlC;AACAE,QAAAA,YAAY,CAACG,KAAb,GAAqBF,IAAI,CAACG,GAA1B;;AACA,YAAIH,IAAI,CAACG,GAAT,EAAc;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeL,IAAI,CAACC,IAAL,CAAUL,QAAS,GAA/C;AACAZ,UAAAA,KAAK,CAACJ,WAAN,GAAoBoB,IAAI,CAACC,IAAzB;AACD,SAHD,MAGO;AACLG,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;;AAAA;AACJ,OAvBD;;AAwBAjB,MAAAA,SAAS,GAzBY,CA0BrB;AACD;;AA7BO;AANkB,CAAD,CAA7B;AAuCA,OAAO,MAAM;AAAED,EAAAA,OAAF;AAAWJ,EAAAA;AAAX,IAAwBN,SAAS,CAAC6B,OAAxC;AACP,eAAe7B,SAAS,CAAC8B,OAAzB","sourcesContent":["import { createSlice, createAction } from '@reduxjs/toolkit';\n\nconst userSlice = createSlice({\n  name: \"userSlice\",\n  initialState: {\n    currentUser: null,\n    users: [],\n  },\n  reducers: {\n    setUsers(state, action) { state.users = action.payload },\n    setUser(state, action) {\n      const postLogin = async () => {\n      const response = await fetch(\"http://localhost:8080/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: action.payload.username,\n          password: action.payload.password\n        })\n      });\n      const json = await response.json();\n      //   .then(res => res.json())\n      //   .then(data => {\n          localStorage.username = data.user.username;\n          localStorage.password = data.user.password;\n          localStorage.token = data.jwt;\n          if (data.jwt) {\n            console.log(`Welcome back ${data.user.username}!`);\n            state.currentUser = data.user;\n          } else {\n            console.log(\"Invalid Login\");\n          };\n      };\n      postLogin();\n      //   })\n    },\n  }\n});\n\nexport const { setUser, setUsers } = userSlice.actions;\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}