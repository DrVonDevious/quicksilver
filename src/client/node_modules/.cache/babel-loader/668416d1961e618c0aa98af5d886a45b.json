{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';// A slice is a function from toolkit that combines the functionality\n// of an action and a reducer into one\nvar loadSlice=createSlice({name:\"loadSlice\",initialState:{loadState:false,mode:\"lib\",query:\"\",components:[]},// actions are auto-generated by the creation of the reducers\nreducers:{toggleLoad:function toggleLoad(state,action){state.loadState=!state.loadState;},setComponents:function setComponents(state,action){state.components=action.payload;},setMode:function setMode(state,action){state.mode=action.payload;},removeComponent:function removeComponent(state,action){state.components=state.components.filter(function(c){return c.id!==action.payload;});},resetComponents:function resetComponents(state,action){state.components=[];},filterComponents:function filterComponents(state,action){state.query=action.payload;}}});var _loadSlice$actions=loadSlice.actions,toggleLoad=_loadSlice$actions.toggleLoad,setComponents=_loadSlice$actions.setComponents,setMode=_loadSlice$actions.setMode,resetComponents=_loadSlice$actions.resetComponents,removeComponent=_loadSlice$actions.removeComponent,filterComponents=_loadSlice$actions.filterComponents;export{toggleLoad,setComponents,setMode,resetComponents,removeComponent,filterComponents};export default loadSlice.reducer;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/client/src/reducers/loadReducer.js"],"names":["createSlice","loadSlice","name","initialState","loadState","mode","query","components","reducers","toggleLoad","state","action","setComponents","payload","setMode","removeComponent","filter","c","id","resetComponents","filterComponents","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA;AACA;AACA,GAAMC,CAAAA,SAAS,CAAGD,WAAW,CAAC,CAC5BE,IAAI,CAAE,WADsB,CAE5BC,YAAY,CAAE,CACZC,SAAS,CAAE,KADC,CAEZC,IAAI,CAAE,KAFM,CAGZC,KAAK,CAAE,EAHK,CAIZC,UAAU,CAAE,EAJA,CAFc,CAS5B;AACAC,QAAQ,CAAE,CACRC,UADQ,qBACGC,KADH,CACUC,MADV,CACkB,CAAED,KAAK,CAACN,SAAN,CAAkB,CAACM,KAAK,CAACN,SAAzB,CAAoC,CADxD,CAERQ,aAFQ,wBAEMF,KAFN,CAEaC,MAFb,CAEqB,CAAED,KAAK,CAACH,UAAN,CAAmBI,MAAM,CAACE,OAA1B,CAAmC,CAF1D,CAGRC,OAHQ,kBAGAJ,KAHA,CAGOC,MAHP,CAGe,CAAED,KAAK,CAACL,IAAN,CAAaM,MAAM,CAACE,OAApB,CAA6B,CAH9C,CAIRE,eAJQ,0BAIQL,KAJR,CAIeC,MAJf,CAIuB,CAC7BD,KAAK,CAACH,UAAN,CAAmBG,KAAK,CAACH,UAAN,CAAiBS,MAAjB,CAAwB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,EAAF,GAASP,MAAM,CAACE,OAApB,EAAzB,CAAnB,CACD,CANO,CAORM,eAPQ,0BAOQT,KAPR,CAOeC,MAPf,CAOuB,CAC7BD,KAAK,CAACH,UAAN,CAAmB,EAAnB,CACD,CATO,CAURa,gBAVQ,2BAUSV,KAVT,CAUgBC,MAVhB,CAUwB,CAAED,KAAK,CAACJ,KAAN,CAAcK,MAAM,CAACE,OAArB,CAA8B,CAVxD,CAVkB,CAAD,CAA7B,C,uBA+BIZ,SAAS,CAACoB,O,CANZZ,U,oBAAAA,U,CACAG,a,oBAAAA,a,CACAE,O,oBAAAA,O,CACAK,e,oBAAAA,e,CACAJ,e,oBAAAA,e,CACAK,gB,oBAAAA,gB,2FAEF,cAAenB,CAAAA,SAAS,CAACqB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n// A slice is a function from toolkit that combines the functionality\n// of an action and a reducer into one\nconst loadSlice = createSlice({\n  name: \"loadSlice\",\n  initialState: {\n    loadState: false,\n    mode: \"lib\",\n    query: \"\",\n    components: [],\n  },\n\n  // actions are auto-generated by the creation of the reducers\n  reducers: {\n    toggleLoad(state, action) { state.loadState = !state.loadState },\n    setComponents(state, action) { state.components = action.payload },\n    setMode(state, action) { state.mode = action.payload },\n    removeComponent(state, action) {\n      state.components = state.components.filter(c => c.id !== action.payload)\n    },\n    resetComponents(state, action) {\n      state.components = [];\n    },\n    filterComponents(state, action) { state.query = action.payload },\n  }\n});\n\nexport const {\n  toggleLoad,\n  setComponents,\n  setMode,\n  resetComponents,\n  removeComponent,\n  filterComponents\n} = loadSlice.actions;\nexport default loadSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}