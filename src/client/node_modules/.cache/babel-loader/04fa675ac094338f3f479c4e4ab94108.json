{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';var currentUser=null;// A slice is a function from toolkit that combines the functionality\n// of an action and a reducer into one\nvar userSlice=createSlice({name:\"userSlice\",initialState:{currentUser:currentUser,users:[]},// actions are auto-generated by the creation of the reducers\nreducers:{setUsers:function setUsers(state,action){state.users=action.payload;},setUser:function setUser(state,action){state.currentUser=action.payload;},resetUser:function resetUser(state,action){state.currentUser=currentUser;}}});var _userSlice$actions=userSlice.actions,setUser=_userSlice$actions.setUser,setUsers=_userSlice$actions.setUsers,resetUser=_userSlice$actions.resetUser;export{setUser,setUsers,resetUser};export default userSlice.reducer;","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/client/src/reducers/userReducer.js"],"names":["createSlice","currentUser","userSlice","name","initialState","users","reducers","setUsers","state","action","payload","setUser","resetUser","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,CAAAA,WAAW,CAAG,IAApB,CAEA;AACA;AACA,GAAMC,CAAAA,SAAS,CAAGF,WAAW,CAAC,CAC5BG,IAAI,CAAE,WADsB,CAE5BC,YAAY,CAAE,CACZH,WAAW,CAAXA,WADY,CAEZI,KAAK,CAAE,EAFK,CAFc,CAO5B;AACAC,QAAQ,CAAE,CACRC,QADQ,mBACCC,KADD,CACQC,MADR,CACgB,CAAED,KAAK,CAACH,KAAN,CAAcI,MAAM,CAACC,OAArB,CAA8B,CADhD,CAERC,OAFQ,kBAEAH,KAFA,CAEOC,MAFP,CAEe,CAAED,KAAK,CAACP,WAAN,CAAoBQ,MAAM,CAACC,OAA3B,CAAoC,CAFrD,CAGRE,SAHQ,oBAGEJ,KAHF,CAGSC,MAHT,CAGiB,CAAED,KAAK,CAACP,WAAN,CAAoBA,WAApB,CAAiC,CAHpD,CARkB,CAAD,CAA7B,C,uBAegDC,SAAS,CAACW,O,CAA3CF,O,oBAAAA,O,CAASJ,Q,oBAAAA,Q,CAAUK,S,oBAAAA,S,oCAClC,cAAeV,CAAAA,SAAS,CAACY,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst currentUser = null;\n\n// A slice is a function from toolkit that combines the functionality\n// of an action and a reducer into one\nconst userSlice = createSlice({\n  name: \"userSlice\",\n  initialState: {\n    currentUser,\n    users: [],\n  },\n\n  // actions are auto-generated by the creation of the reducers\n  reducers: {\n    setUsers(state, action) { state.users = action.payload },\n    setUser(state, action) { state.currentUser = action.payload },\n    resetUser(state, action) { state.currentUser = currentUser }\n  }\n});\n\nexport const { setUser, setUsers, resetUser } = userSlice.actions;\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}