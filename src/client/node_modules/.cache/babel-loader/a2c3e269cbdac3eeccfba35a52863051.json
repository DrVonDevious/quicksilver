{"ast":null,"code":"var _ = require('lodash'),\n    utils = require('../utils'),\n    isTag = utils.isTag,\n    domEach = utils.domEach,\n    hasOwn = Object.prototype.hasOwnProperty,\n    camelCase = utils.camelCase,\n    cssCase = utils.cssCase,\n    rspace = /\\s+/,\n    dataAttrPrefix = 'data-',\n    // Lookup table for coercing string data-* attributes to their corresponding\n// JavaScript primitives\nprimitives = {\n  null: null,\n  true: true,\n  false: false\n},\n    // Attributes that are booleans\nrboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,\n    // Matches strings that look like JSON objects or arrays\nrbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/;\n\nvar getAttr = function (elem, name) {\n  if (!elem || !isTag(elem)) return;\n\n  if (!elem.attribs) {\n    elem.attribs = {};\n  } // Return the entire attribs object if no attribute specified\n\n\n  if (!name) {\n    return elem.attribs;\n  }\n\n  if (hasOwn.call(elem.attribs, name)) {\n    // Get the (decoded) attribute\n    return rboolean.test(name) ? name : elem.attribs[name];\n  }\n};\n\nvar setAttr = function (el, name, value) {\n  if (value === null) {\n    removeAttribute(el, name);\n  } else {\n    el.attribs[name] = value + '';\n  }\n};\n\nexports.attr = function (name, value) {\n  // Set the value (with attr map support)\n  if (typeof name === 'object' || value !== undefined) {\n    if (typeof value === 'function') {\n      return domEach(this, function (i, el) {\n        setAttr(el, name, value.call(el, i, el.attribs[name]));\n      });\n    }\n\n    return domEach(this, function (i, el) {\n      if (!isTag(el)) return;\n\n      if (typeof name === 'object') {\n        _.each(name, function (name, key) {\n          el.attribs[key] = name + '';\n        });\n      } else {\n        setAttr(el, name, value);\n      }\n    });\n  }\n\n  return getAttr(this[0], name);\n};\n\nvar setData = function (el, name, value) {\n  if (typeof name === 'object') return _.extend(el.data, name);\n\n  if (typeof name === 'string' && value !== undefined) {\n    el.data[name] = value;\n  } else if (typeof name === 'object') {\n    _.exend(el.data, name);\n  }\n}; // Read the specified attribute from the equivalent HTML5 `data-*` attribute,\n// and (if present) cache the value in the node's internal data store. If no\n// attribute name is specified, read *all* HTML5 `data-*` attributes in this\n// manner.\n\n\nvar readData = function (el, name) {\n  var readAll = arguments.length === 1;\n  var domNames, domName, jsNames, jsName, value, idx, length;\n\n  if (readAll) {\n    domNames = Object.keys(el.attribs).filter(function (attrName) {\n      return attrName.slice(0, dataAttrPrefix.length) === dataAttrPrefix;\n    });\n    jsNames = domNames.map(function (domName) {\n      return camelCase(domName.slice(dataAttrPrefix.length));\n    });\n  } else {\n    domNames = [dataAttrPrefix + cssCase(name)];\n    jsNames = [name];\n  }\n\n  for (idx = 0, length = domNames.length; idx < length; ++idx) {\n    domName = domNames[idx];\n    jsName = jsNames[idx];\n\n    if (hasOwn.call(el.attribs, domName)) {\n      value = el.attribs[domName];\n\n      if (hasOwn.call(primitives, value)) {\n        value = primitives[value];\n      } else if (value === String(Number(value))) {\n        value = Number(value);\n      } else if (rbrace.test(value)) {\n        try {\n          value = JSON.parse(value);\n        } catch (e) {}\n      }\n\n      el.data[jsName] = value;\n    }\n  }\n\n  return readAll ? el.data : value;\n};\n\nexports.data = function (name, value) {\n  var elem = this[0];\n  if (!elem || !isTag(elem)) return;\n\n  if (!elem.data) {\n    elem.data = {};\n  } // Return the entire data object if no data specified\n\n\n  if (!name) {\n    return readData(elem);\n  } // Set the value (with attr map support)\n\n\n  if (typeof name === 'object' || value !== undefined) {\n    domEach(this, function (i, el) {\n      setData(el, name, value);\n    });\n    return this;\n  } else if (hasOwn.call(elem.data, name)) {\n    return elem.data[name];\n  }\n\n  return readData(elem, name);\n};\n/**\n * Get the value of an element\n */\n\n\nexports.val = function (value) {\n  var querying = arguments.length === 0,\n      element = this[0];\n  if (!element) return;\n\n  switch (element.name) {\n    case 'textarea':\n      return this.text(value);\n\n    case 'input':\n      switch (this.attr('type')) {\n        case 'radio':\n          if (querying) {\n            return this.attr('value');\n          } else {\n            this.attr('value', value);\n            return this;\n          }\n\n          break;\n\n        default:\n          return this.attr('value', value);\n      }\n\n      return;\n\n    case 'select':\n      var option = this.find('option:selected'),\n          returnValue;\n      if (option === undefined) return undefined;\n\n      if (!querying) {\n        if (!this.attr().hasOwnProperty('multiple') && typeof value == 'object') {\n          return this;\n        }\n\n        if (typeof value != 'object') {\n          value = [value];\n        }\n\n        this.find('option').removeAttr('selected');\n\n        for (var i = 0; i < value.length; i++) {\n          this.find('option[value=\"' + value[i] + '\"]').attr('selected', '');\n        }\n\n        return this;\n      }\n\n      returnValue = option.attr('value');\n\n      if (this.attr().hasOwnProperty('multiple')) {\n        returnValue = [];\n        domEach(option, function (i, el) {\n          returnValue.push(el.attribs.value);\n        });\n      }\n\n      return returnValue;\n\n    case 'option':\n      if (!querying) {\n        this.attr('value', value);\n        return this;\n      }\n\n      return this.attr('value');\n  }\n};\n/**\n * Remove an attribute\n */\n\n\nvar removeAttribute = function (elem, name) {\n  if (!elem.attribs || !hasOwn.call(elem.attribs, name)) return;\n  delete elem.attribs[name];\n};\n\nexports.removeAttr = function (name) {\n  domEach(this, function (i, elem) {\n    removeAttribute(elem, name);\n  });\n  return this;\n};\n\nexports.hasClass = function (className) {\n  return _.any(this, function (elem) {\n    var attrs = elem.attribs,\n        clazz = attrs && attrs['class'],\n        idx = -1,\n        end;\n\n    if (clazz) {\n      while ((idx = clazz.indexOf(className, idx + 1)) > -1) {\n        end = idx + className.length;\n\n        if ((idx === 0 || rspace.test(clazz[idx - 1])) && (end === clazz.length || rspace.test(clazz[end]))) {\n          return true;\n        }\n      }\n    }\n  });\n};\n\nexports.addClass = function (value) {\n  // Support functions\n  if (typeof value === 'function') {\n    return domEach(this, function (i, el) {\n      var className = el.attribs['class'] || '';\n      exports.addClass.call([el], value.call(el, i, className));\n    });\n  } // Return if no value or not a string or function\n\n\n  if (!value || typeof value !== 'string') return this;\n  var classNames = value.split(rspace),\n      numElements = this.length;\n\n  for (var i = 0; i < numElements; i++) {\n    // If selected element isn't a tag, move on\n    if (!isTag(this[i])) continue; // If we don't already have classes\n\n    var className = getAttr(this[i], 'class'),\n        numClasses,\n        setClass;\n\n    if (!className) {\n      setAttr(this[i], 'class', classNames.join(' ').trim());\n    } else {\n      setClass = ' ' + className + ' ';\n      numClasses = classNames.length; // Check if class already exists\n\n      for (var j = 0; j < numClasses; j++) {\n        var appendClass = classNames[j] + ' ';\n        if (setClass.indexOf(' ' + appendClass) < 0) setClass += appendClass;\n      }\n\n      setAttr(this[i], 'class', setClass.trim());\n    }\n  }\n\n  return this;\n};\n\nvar splitClass = function (className) {\n  return className ? className.trim().split(rspace) : [];\n};\n\nexports.removeClass = function (value) {\n  var classes, numClasses, removeAll; // Handle if value is a function\n\n  if (typeof value === 'function') {\n    return domEach(this, function (i, el) {\n      exports.removeClass.call([el], value.call(el, i, el.attribs['class'] || ''));\n    });\n  }\n\n  classes = splitClass(value);\n  numClasses = classes.length;\n  removeAll = arguments.length === 0;\n  return domEach(this, function (i, el) {\n    if (!isTag(el)) return;\n\n    if (removeAll) {\n      // Short circuit the remove all case as this is the nice one\n      el.attribs.class = '';\n    } else {\n      var elClasses = splitClass(el.attribs.class),\n          index,\n          changed;\n\n      for (var j = 0; j < numClasses; j++) {\n        index = elClasses.indexOf(classes[j]);\n\n        if (index >= 0) {\n          elClasses.splice(index, 1);\n          changed = true; // We have to do another pass to ensure that there are not duplicate\n          // classes listed\n\n          j--;\n        }\n      }\n\n      if (changed) {\n        el.attribs.class = elClasses.join(' ');\n      }\n    }\n  });\n};\n\nexports.toggleClass = function (value, stateVal) {\n  // Support functions\n  if (typeof value === 'function') {\n    return domEach(this, function (i, el) {\n      exports.toggleClass.call([el], value.call(el, i, el.attribs['class'] || '', stateVal), stateVal);\n    });\n  } // Return if no value or not a string or function\n\n\n  if (!value || typeof value !== 'string') return this;\n  var classNames = value.split(rspace),\n      numClasses = classNames.length,\n      state = typeof stateVal === 'boolean' ? stateVal ? 1 : -1 : 0,\n      numElements = this.length,\n      elementClasses,\n      index;\n\n  for (var i = 0; i < numElements; i++) {\n    // If selected element isn't a tag, move on\n    if (!isTag(this[i])) continue;\n    elementClasses = splitClass(this[i].attribs.class); // Check if class already exists\n\n    for (var j = 0; j < numClasses; j++) {\n      // Check if the class name is currently defined\n      index = elementClasses.indexOf(classNames[j]); // Add if stateValue === true or we are toggling and there is no value\n\n      if (state >= 0 && index < 0) {\n        elementClasses.push(classNames[j]);\n      } else if (state <= 0 && index >= 0) {\n        // Otherwise remove but only if the item exists\n        elementClasses.splice(index, 1);\n      }\n    }\n\n    this[i].attribs.class = elementClasses.join(' ');\n  }\n\n  return this;\n};\n\nexports.is = function (selector) {\n  if (selector) {\n    return this.filter(selector).length > 0;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/Users/william/Dev/quicksilver/node_modules/cheerio/lib/api/attributes.js"],"names":["_","require","utils","isTag","domEach","hasOwn","Object","prototype","hasOwnProperty","camelCase","cssCase","rspace","dataAttrPrefix","primitives","null","true","false","rboolean","rbrace","getAttr","elem","name","attribs","call","test","setAttr","el","value","removeAttribute","exports","attr","undefined","i","each","key","setData","extend","data","exend","readData","readAll","arguments","length","domNames","domName","jsNames","jsName","idx","keys","filter","attrName","slice","map","String","Number","JSON","parse","e","val","querying","element","text","option","find","returnValue","removeAttr","push","hasClass","className","any","attrs","clazz","end","indexOf","addClass","classNames","split","numElements","numClasses","setClass","join","trim","j","appendClass","splitClass","removeClass","classes","removeAll","class","elClasses","index","changed","splice","toggleClass","stateVal","state","elementClasses","is","selector"],"mappings":"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","sourcesContent":["var _ = require('lodash'),\n  utils = require('../utils'),\n  isTag = utils.isTag,\n  domEach = utils.domEach,\n  hasOwn = Object.prototype.hasOwnProperty,\n  camelCase = utils.camelCase,\n  cssCase = utils.cssCase,\n  rspace = /\\s+/,\n  dataAttrPrefix = 'data-',\n\n  // Lookup table for coercing string data-* attributes to their corresponding\n  // JavaScript primitives\n  primitives = {\n    null: null,\n    true: true,\n    false: false\n  },\n\n  // Attributes that are booleans\n  rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,\n  // Matches strings that look like JSON objects or arrays\n  rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/;\n\n\nvar getAttr = function(elem, name) {\n  if (!elem || !isTag(elem)) return;\n\n  if (!elem.attribs) {\n    elem.attribs = {};\n  }\n\n  // Return the entire attribs object if no attribute specified\n  if (!name) {\n    return elem.attribs;\n  }\n\n  if (hasOwn.call(elem.attribs, name)) {\n    // Get the (decoded) attribute\n    return rboolean.test(name) ? name : elem.attribs[name];\n  }\n};\n\nvar setAttr = function(el, name, value) {\n\n  if (value === null) {\n    removeAttribute(el, name);\n  } else {\n    el.attribs[name] = value+'';\n  }\n};\n\nexports.attr = function(name, value) {\n  // Set the value (with attr map support)\n  if (typeof name === 'object' || value !== undefined) {\n    if (typeof value === 'function') {\n      return domEach(this, function(i, el) {\n        setAttr(el, name, value.call(el, i, el.attribs[name]));\n      });\n    }\n    return domEach(this, function(i, el) {\n      if (!isTag(el)) return;\n\n      if (typeof name === 'object') {\n        _.each(name, function(name, key) {\n          el.attribs[key] = name+'';\n        });\n      } else {\n        setAttr(el, name, value);\n      }\n    });\n  }\n\n  return getAttr(this[0], name);\n};\n\nvar setData = function(el, name, value) {\n  if (typeof name === 'object') return _.extend(el.data, name);\n  if (typeof name === 'string' && value !== undefined) {\n    el.data[name] = value;\n  } else if (typeof name === 'object') {\n    _.exend(el.data, name);\n  }\n};\n\n// Read the specified attribute from the equivalent HTML5 `data-*` attribute,\n// and (if present) cache the value in the node's internal data store. If no\n// attribute name is specified, read *all* HTML5 `data-*` attributes in this\n// manner.\nvar readData = function(el, name) {\n  var readAll = arguments.length === 1;\n  var domNames, domName, jsNames, jsName, value, idx, length;\n\n  if (readAll) {\n    domNames = Object.keys(el.attribs).filter(function(attrName) {\n      return attrName.slice(0, dataAttrPrefix.length) === dataAttrPrefix;\n    });\n    jsNames = domNames.map(function(domName) {\n      return camelCase(domName.slice(dataAttrPrefix.length));\n    });\n  } else {\n    domNames = [dataAttrPrefix + cssCase(name)];\n    jsNames = [name];\n  }\n\n  for (idx = 0, length = domNames.length; idx < length; ++idx) {\n    domName = domNames[idx];\n    jsName = jsNames[idx];\n    if (hasOwn.call(el.attribs, domName)) {\n      value = el.attribs[domName];\n\n      if (hasOwn.call(primitives, value)) {\n        value = primitives[value];\n      } else if (value === String(Number(value))) {\n        value = Number(value);\n      } else if (rbrace.test(value)) {\n        try {\n          value = JSON.parse(value);\n        } catch(e){ }\n      }\n\n      el.data[jsName] = value;\n    }\n  }\n\n  return readAll ? el.data : value;\n};\n\nexports.data = function(name, value) {\n  var elem = this[0];\n\n  if (!elem || !isTag(elem)) return;\n\n  if (!elem.data) {\n    elem.data = {};\n  }\n\n  // Return the entire data object if no data specified\n  if (!name) {\n    return readData(elem);\n  }\n\n  // Set the value (with attr map support)\n  if (typeof name === 'object' || value !== undefined) {\n    domEach(this, function(i, el) {\n      setData(el, name, value);\n    });\n    return this;\n  } else if (hasOwn.call(elem.data, name)) {\n    return elem.data[name];\n  }\n\n  return readData(elem, name);\n};\n\n/**\n * Get the value of an element\n */\n\nexports.val = function(value) {\n  var querying = arguments.length === 0,\n      element = this[0];\n\n  if(!element) return;\n\n  switch (element.name) {\n    case 'textarea':\n      return this.text(value);\n    case 'input':\n      switch (this.attr('type')) {\n        case 'radio':\n          if (querying) {\n            return this.attr('value');\n          } else {\n            this.attr('value', value);\n            return this;\n          }\n          break;\n        default:\n          return this.attr('value', value);\n      }\n      return;\n    case 'select':\n      var option = this.find('option:selected'),\n          returnValue;\n      if (option === undefined) return undefined;\n      if (!querying) {\n        if (!this.attr().hasOwnProperty('multiple') && typeof value == 'object') {\n          return this;\n        }\n        if (typeof value != 'object') {\n          value = [value];\n        }\n        this.find('option').removeAttr('selected');\n        for (var i = 0; i < value.length; i++) {\n          this.find('option[value=\"' + value[i] + '\"]').attr('selected', '');\n        }\n        return this;\n      }\n      returnValue = option.attr('value');\n      if (this.attr().hasOwnProperty('multiple')) {\n        returnValue = [];\n        domEach(option, function(i, el) {\n          returnValue.push(el.attribs.value);\n        });\n      }\n      return returnValue;\n    case 'option':\n      if (!querying) {\n        this.attr('value', value);\n        return this;\n      }\n      return this.attr('value');\n  }\n};\n\n/**\n * Remove an attribute\n */\n\nvar removeAttribute = function(elem, name) {\n  if (!elem.attribs || !hasOwn.call(elem.attribs, name))\n    return;\n\n  delete elem.attribs[name];\n};\n\n\nexports.removeAttr = function(name) {\n  domEach(this, function(i, elem) {\n    removeAttribute(elem, name);\n  });\n\n  return this;\n};\n\nexports.hasClass = function(className) {\n  return _.any(this, function(elem) {\n    var attrs = elem.attribs,\n        clazz = attrs && attrs['class'],\n        idx = -1,\n        end;\n\n    if (clazz) {\n      while ((idx = clazz.indexOf(className, idx+1)) > -1) {\n        end = idx + className.length;\n\n        if ((idx === 0 || rspace.test(clazz[idx-1]))\n            && (end === clazz.length || rspace.test(clazz[end]))) {\n          return true;\n        }\n      }\n    }\n  });\n};\n\nexports.addClass = function(value) {\n  // Support functions\n  if (typeof value === 'function') {\n    return domEach(this, function(i, el) {\n      var className = el.attribs['class'] || '';\n      exports.addClass.call([el], value.call(el, i, className));\n    });\n  }\n\n  // Return if no value or not a string or function\n  if (!value || typeof value !== 'string') return this;\n\n  var classNames = value.split(rspace),\n      numElements = this.length;\n\n\n  for (var i = 0; i < numElements; i++) {\n    // If selected element isn't a tag, move on\n    if (!isTag(this[i])) continue;\n\n    // If we don't already have classes\n    var className = getAttr(this[i], 'class'),\n        numClasses,\n        setClass;\n\n    if (!className) {\n      setAttr(this[i], 'class', classNames.join(' ').trim());\n    } else {\n      setClass = ' ' + className + ' ';\n      numClasses = classNames.length;\n\n      // Check if class already exists\n      for (var j = 0; j < numClasses; j++) {\n        var appendClass = classNames[j] + ' ';\n        if (setClass.indexOf(' ' + appendClass) < 0)\n          setClass += appendClass;\n      }\n\n      setAttr(this[i], 'class', setClass.trim());\n    }\n  }\n\n  return this;\n};\n\nvar splitClass = function(className) {\n  return className ? className.trim().split(rspace) : [];\n};\n\nexports.removeClass = function(value) {\n  var classes,\n      numClasses,\n      removeAll;\n\n  // Handle if value is a function\n  if (typeof value === 'function') {\n    return domEach(this, function(i, el) {\n      exports.removeClass.call(\n        [el], value.call(el, i, el.attribs['class'] || '')\n      );\n    });\n  }\n\n  classes = splitClass(value);\n  numClasses = classes.length;\n  removeAll = arguments.length === 0;\n\n  return domEach(this, function(i, el) {\n    if (!isTag(el)) return;\n\n    if (removeAll) {\n      // Short circuit the remove all case as this is the nice one\n      el.attribs.class = '';\n    } else {\n      var elClasses = splitClass(el.attribs.class),\n          index,\n          changed;\n\n      for (var j = 0; j < numClasses; j++) {\n        index = elClasses.indexOf(classes[j]);\n\n        if (index >= 0) {\n          elClasses.splice(index, 1);\n          changed = true;\n\n          // We have to do another pass to ensure that there are not duplicate\n          // classes listed\n          j--;\n        }\n      }\n      if (changed) {\n        el.attribs.class = elClasses.join(' ');\n      }\n    }\n  });\n};\n\nexports.toggleClass = function(value, stateVal) {\n  // Support functions\n  if (typeof value === 'function') {\n    return domEach(this, function(i, el) {\n      exports.toggleClass.call(\n        [el],\n        value.call(el, i, el.attribs['class'] || '', stateVal),\n        stateVal\n      );\n    });\n  }\n\n  // Return if no value or not a string or function\n  if (!value || typeof value !== 'string') return this;\n\n  var classNames = value.split(rspace),\n    numClasses = classNames.length,\n    state = typeof stateVal === 'boolean' ? stateVal ? 1 : -1 : 0,\n    numElements = this.length,\n    elementClasses,\n    index;\n\n  for (var i = 0; i < numElements; i++) {\n    // If selected element isn't a tag, move on\n    if (!isTag(this[i])) continue;\n\n    elementClasses = splitClass(this[i].attribs.class);\n\n    // Check if class already exists\n    for (var j = 0; j < numClasses; j++) {\n      // Check if the class name is currently defined\n      index = elementClasses.indexOf(classNames[j]);\n\n      // Add if stateValue === true or we are toggling and there is no value\n      if (state >= 0 && index < 0) {\n        elementClasses.push(classNames[j]);\n      } else if (state <= 0 && index >= 0) {\n        // Otherwise remove but only if the item exists\n        elementClasses.splice(index, 1);\n      }\n    }\n\n    this[i].attribs.class = elementClasses.join(' ');\n  }\n\n  return this;\n};\n\nexports.is = function (selector) {\n  if (selector) {\n    return this.filter(selector).length > 0;\n  }\n  return false;\n};\n\n"]},"metadata":{},"sourceType":"script"}